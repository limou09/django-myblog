-- MySQL dump 10.13  Distrib 5.7.26, for Linux (x86_64)
--
-- Host: localhost    Database: myblog1
-- ------------------------------------------------------
-- Server version	5.7.26-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=77 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add user',4,'add_user'),(14,'Can change user',4,'change_user'),(15,'Can delete user',4,'delete_user'),(16,'Can view user',4,'view_user'),(17,'Can add content type',5,'add_contenttype'),(18,'Can change content type',5,'change_contenttype'),(19,'Can delete content type',5,'delete_contenttype'),(20,'Can view content type',5,'view_contenttype'),(21,'Can add session',6,'add_session'),(22,'Can change session',6,'change_session'),(23,'Can delete session',6,'delete_session'),(24,'Can view session',6,'view_session'),(25,'Can add 文章列表',7,'add_article'),(26,'Can change 文章列表',7,'change_article'),(27,'Can delete 文章列表',7,'delete_article'),(28,'Can view 文章列表',7,'view_article'),(29,'Can add 轮播图',8,'add_banner'),(30,'Can change 轮播图',8,'change_banner'),(31,'Can delete 轮播图',8,'delete_banner'),(32,'Can view 轮播图',8,'view_banner'),(33,'Can add 文章分类',9,'add_category'),(34,'Can change 文章分类',9,'change_category'),(35,'Can delete 文章分类',9,'delete_category'),(36,'Can view 文章分类',9,'view_category'),(37,'Can add 评论',10,'add_comment'),(38,'Can change 评论',10,'change_comment'),(39,'Can delete 评论',10,'delete_comment'),(40,'Can view 评论',10,'view_comment'),(41,'Can add 友情链接',11,'add_link'),(42,'Can change 友情链接',11,'change_link'),(43,'Can delete 友情链接',11,'delete_link'),(44,'Can view 友情链接',11,'view_link'),(45,'Can add 文章标签',12,'add_tag'),(46,'Can change 文章标签',12,'change_tag'),(47,'Can delete 文章标签',12,'delete_tag'),(48,'Can view 文章标签',12,'view_tag'),(49,'Can add 推荐位',13,'add_tui'),(50,'Can change 推荐位',13,'change_tui'),(51,'Can delete 推荐位',13,'delete_tui'),(52,'Can view 推荐位',13,'view_tui'),(53,'Can add user',14,'add_user'),(54,'Can change user',14,'change_user'),(55,'Can delete user',14,'delete_user'),(56,'Can view user',14,'view_user'),(57,'Can add captcha store',15,'add_captchastore'),(58,'Can change captcha store',15,'change_captchastore'),(59,'Can delete captcha store',15,'delete_captchastore'),(60,'Can view captcha store',15,'view_captchastore'),(61,'Can add User Widget',16,'add_userwidget'),(62,'Can change User Widget',16,'change_userwidget'),(63,'Can delete User Widget',16,'delete_userwidget'),(64,'Can view User Widget',16,'view_userwidget'),(65,'Can add Bookmark',17,'add_bookmark'),(66,'Can change Bookmark',17,'change_bookmark'),(67,'Can delete Bookmark',17,'delete_bookmark'),(68,'Can view Bookmark',17,'view_bookmark'),(69,'Can add User Setting',18,'add_usersettings'),(70,'Can change User Setting',18,'change_usersettings'),(71,'Can delete User Setting',18,'delete_usersettings'),(72,'Can view User Setting',18,'view_usersettings'),(73,'Can add log entry',19,'add_log'),(74,'Can change log entry',19,'change_log'),(75,'Can delete log entry',19,'delete_log'),(76,'Can view log entry',19,'view_log');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$120000$Sn28BARy7bMv$41J18+oY2mcGNuR91dKciAusH5O6XXlrVRK1cZfCcWQ=','2019-06-07 10:56:44.438245',1,'limou','','','limou99@163.com',1,1,'2019-05-16 19:22:33.488840');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article`
--

DROP TABLE IF EXISTS `blog_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `excerpt` longtext NOT NULL,
  `img` varchar(100) DEFAULT NULL,
  `body` longtext NOT NULL,
  `views` int(10) unsigned NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `update_time` datetime(6) NOT NULL,
  `category_id` int(11) DEFAULT NULL,
  `tui_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_article_category_id_7e38f15e_fk_blog_category_id` (`category_id`),
  KEY `blog_article_tui_id_d498cd9f_fk_blog_tui_id` (`tui_id`),
  KEY `blog_article_user_id_5beb0cc1_fk_auth_user_id` (`user_id`),
  CONSTRAINT `blog_article_category_id_7e38f15e_fk_blog_category_id` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`id`),
  CONSTRAINT `blog_article_tui_id_d498cd9f_fk_blog_tui_id` FOREIGN KEY (`tui_id`) REFERENCES `blog_tui` (`id`),
  CONSTRAINT `blog_article_user_id_5beb0cc1_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article`
--

LOCK TABLES `blog_article` WRITE;
/*!40000 ALTER TABLE `blog_article` DISABLE KEYS */;
INSERT INTO `blog_article` VALUES (1,'Django Rest Framework 云片网发送短信验证码','用户注册功能的实现中会大量的运用serializer。之前的是serializer初级的用法，现在开始，特别是表单的提交，就是serializer比较高级的一些用法。\r\n\r\n首先通过前端的注册页面看看我们需要提供哪些接口。一是发送短信的接口，二是表单提交的接口（包括验证、提交、跳转等）。','article_img/2019/05/16/_LSR0U7J4IGIR68RHJ3W.png','<h1 class=\"title-article\" style=\"box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">Django Rest Framework 电商项目 7-7 云片网发送短信验证码</h1><p><br/></p><p><img src=\"/media/upimg/_LSR0U}7J4(IGIR68RHJ)3W_20190516202658_831.png\" title=\"\" alt=\"_LSR0U}7J4(IGIR68RHJ)3W.png\" width=\"759\" height=\"384\" style=\"width: 759px; height: 384px;\"/></p><p>用户注册功能的实现中会大量的运用serializer。之前的是serializer初级的用法，现在开始，特别是表单的提交，就是serializer比较高级的一些用法。</p><p><br/></p><p>首先通过前端的注册页面看看我们需要提供哪些接口。一是发送短信的接口，二是表单提交的接口（包括验证、提交、跳转等）。</p><p><br/></p><p>我们首先解决发送短信的接口，我们需要第三方服务——云片网（https://www.yunpian.com/）。</p><p><br/></p><p>大家先去云片网进行注册，然后点击“管理控制台”。可以看到，每个公司都可以有若干子账户，每个子账户都会有一个APIKEY，这在以后发送验证码的时候会用到。</p><p><br/></p><p>右侧的国内短信中有一栏“签名/模板报备”，这几乎是每个短信发送商都会要求我们做的两件事（后来经过测试，对于云片网来说，开发时模板不是必须的，但云片网的文档中是要求我们提交模板验证的，因为提交模板验证是需要有带有验证码的注册页面的，这是为了防止我们的网站被恶意刷注册短信；但签名是必须的，后面使用云片网提供的接口发送短信时，如果发送内容中的签名不一致，会报错）。</p><p><br/></p><p>我们首先要申请签名，申请之前需要先完善开发者信息，这都是需要审核的。我们把签名申请为你的姓名就好了，因为申请与企业名称相关的签名是需要有公司证明的，目前我们只是处在一个开发项目的过程，不必。</p><p><br/></p><p>申请完签名后，我们还需要新建模板。我们今后发送模板，必须是依照模板的格式，里面会给我们一些变量，例如：</p><p><br/></p><p>您的验证码是#code#。</p><p>新建模板也是需要审核的（如上面述，开发过程，这不是必须的）。</p><p><br/></p><p>完成签名和模板报备后，就可以开发短信的发送功能了。</p><p><br/></p><p>看它的API文档（https://www.yunpian.com/api2.0/guide.html），点击使用说明，再点击右侧的国内短信，查看国内短信API列表，点击对应的API名称可以看到详细用法。如果有其他需求，请自行查看使用方法。</p><p><br/></p><p>因为我们要实现的是短信验证码功能，所以我们要用到的是单条发送，点击进去，看看它的使用方法（https://www.yunpian.com/doc/zh_CN/domestic/single_send.html）。</p><p><br/></p><p>它告诉我们了它的请求URL，也就是它的接口；访问方式必须为POST；接口支持http和https两种，我们一般用https，因为它相对安全一些；还告诉了我们一些参数，我们只需要填写必填参数即可。</p><p><br/></p><p>下面我们编程实现它。</p><p><br/></p><p>在apps下新建一个package，取名：utils（实用工具、工具类），在utils之下新建一个python脚本文件，取名yunpian。编辑：</p><p><br/></p><p>import json&nbsp; # 用来解析response</p><p>import requests&nbsp; # requests的使用，可以参考官方文档，用来替代urllib</p><p>from MxShop.settings import APIKEY</p><p>&nbsp;</p><p>&nbsp;</p><p>class YunPian(object):</p><p>&nbsp;</p><p>&nbsp; &nbsp; def __init__(self, api_key):</p><p>&nbsp; &nbsp; &nbsp; &nbsp; self.api_key = api_key</p><p>&nbsp; &nbsp; &nbsp; &nbsp; self.single_send_url = &quot;https://sms.yunpian.com/v2/sms/single_send.json&quot;&nbsp; # 取名为单条发送，方便以后拓展</p><p>&nbsp;</p><p>&nbsp; &nbsp; def send_sms(self, code, mobile):</p><p>&nbsp; &nbsp; &nbsp; &nbsp; parmas = {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;apikey&quot;: self.api_key,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;mobile&quot;: mobile,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # text的格式必须是模板格式（如果有），并对变量code进行替换</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot;: &quot;【你的签名】您的验证码是{code}。如非本人操作，请忽略本短信&quot;.format(code=code)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; response = requests.post(self.single_send_url, data=parmas)&nbsp; # 返回response.text的实际上是字符串</p><p>&nbsp; &nbsp; &nbsp; &nbsp; re_dict = json.loads(response.text)&nbsp; # 所以需要解析response.text</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return re_dict</p><p>&nbsp;</p><p>&nbsp;</p><p>if __name__ == &quot;__main__&quot;:&nbsp; # 用来测试发送功能，当DRF提供了相应的接口后，可以注释掉</p><p>&nbsp; &nbsp; yun_pian = YunPian(APIKEY)</p><p>&nbsp; &nbsp; yun_pian.send_sms(&quot;你的验证码&quot;, &quot;你的电话号码&quot;)&nbsp; # 因为是测试用，所以静态数据即可</p><p>&nbsp;</p><p>在settings.py中添加（便于今后在其他地方引入）：</p><p><br/></p><p># 云片网设置</p><p>APIKEY = &quot;你的云片网APIKEY&quot;</p><p>在send_sms中打断点调试一下，有可能发现报错说我们的ip是不能发送的。这是因为我们还要在云片网的系统设置中的ip白名单中将可以发送短信的主机的ip添加进去（测试的时候添本地ip，可以通过搜索本地ip查询到；上线的时候添服务器ip），如果你没有报这个错误，可能是你的限制ip的功能没有开启，建议开启功能、添加ip。添加完成之后，短信发送功能就完成了。</p><p><br/></p><p>下一步是用DRF实现发送短信的接口。</p><p>---------------------&nbsp;</p><p>作者：大梦想家豪哥&nbsp;</p><p>来源：CSDN&nbsp;</p><p>原文：https://blog.csdn.net/liujh_990807/article/details/86619002&nbsp;</p><p>版权声明：本文为博主原创文章，转载请附上博文链接！</p><p><br/></p>',12,'2019-05-16 20:28:21.826251','2019-06-02 20:07:49.938857',1,2,1),(2,'Django常用命令介绍，新手建议阅读','在DJango里django-admin.py和manage.py都是Django的命令工具集，用于处理系统管理相关操作，而manage.py是在创建Django工程时自动生成的，manage.py是对django-admin.py的简单包装，二者的作用基本一致。','article_img/2019/05/16/DPI9XTV0POD3V_76STI.png','<h1 class=\"article__title\" style=\"box-sizing: border-box; color: rgb(80, 80, 80); margin: 0px 0px 0.5em; font-family: Nunito, sans-serif; line-height: 1.35; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">Django常用命令介绍，新手建议阅读</h1><p><br/></p><p>转自django中文网</p><p>原文地址：https://www.django.cn/article/show-26.html</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">在DJango里django-admin.py和manage.py都是Django的命令工具集，用于处理系统管理相关操作，而manage.py是在创建Django工程时自动生成的，manage.py是对django-admin.py的简单包装，二者的作用基本一致。</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">区别：</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">1、django-admin存放在Python的site-packages\\django\\bin 里，manage.py存放在项目工程文件夹里。</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">2、django-admin可以对不同的项目进行设置，而manege.py只能当前的工程有效。</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">下面我们以manage.py为例，列出一些常用的命令：</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">django-admin &lt;subcommand&gt; [options]</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">manage.py &lt;subcommand&gt; [options]</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">subcommand是子命令；options是可选的</p><pre class=\"brush:python;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">常用子命令：startproject:创建一个项目（*）startapp:创建一个app（*）runserver：运行开发服务器（*）shell：进入django&nbsp;shell（*）dbshell：进入django&nbsp;dbshellcheck：检查django项目完整性flush：清空数据库compilemessages：编译语言文件makemessages：创建语言文件makemigrations：生成数据库同步脚本（*）migrate：同步数据库（*）showmigrations：查看生成的数据库同步脚本（*）sqlflush：查看生成清空数据库的脚本（*）sqlmigrate：查看数据库同步的sql语句（*）dumpdata:导出数据loaddata:导入数据diffsettings:查看你的配置和django默认配置的不同之处manage.py特有的一些子命令：createsuperuser:创建超级管理员（*）changepassword:修改密码（*）clearsessions：清除session</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">1、help</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：获得帮助信息</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">#显示帮助信息和可用命令python&nbsp;manege.py&nbsp;help#显示可用命令列表python&nbsp;manege.py&nbsp;help&nbsp;--commands#显示指定命令的详细文档python&nbsp;manage.py&nbsp;help&nbsp;&nbsp;#commands为需要指定显示的命令</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">2、version</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：获取到当前DJango的版本</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;version</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">3、check</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：检查工程中是否存在错误（检查完整性）</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;check&nbsp;[appname]&nbsp;&nbsp;&nbsp;#命令后面跟APP名称</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">4、startproject</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：创建Django工程</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs apache\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">django-admin&nbsp;startproject&nbsp;name&nbsp;[项目想要存放的路径]</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">5、startapp</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：创建Django应用程序</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">django-admin&nbsp;startapp&nbsp;name&nbsp;[应用想要存放的路径]python&nbsp;manage.py&nbsp;startapp&nbsp;name</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">6、runserver</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：在当前机器启动一个Web服务器，运行Django项目</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">#默认是8000端口python&nbsp;manage.py&nbsp;runserver#指定IP和端口python&nbsp;manage.py&nbsp;runserver&nbsp;127.0.0.1:8000#指定端口python&nbsp;manage.py&nbsp;runserver&nbsp;8000</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">7、shell</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：启动一个交互窗口</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs apache\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;shell#如果想使用ipython、bpython交互模式的话需要先安装以上交互工具，安装命令：pip&nbsp;install&nbsp;ipython#启用命令python&nbsp;manage.py&nbsp;shell&nbsp;--i&nbsp;[ipyhton]</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">8、migrations</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">Django通过migrations命令将Models中的任何修改写入到数库中，比如：新增加的模型或修改已有的字段等。</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">makemigrations</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：根据models的变化生成对应的Python代码，该代码用于更新数据库</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;makemigrationspython&nbsp;manage.py&nbsp;makemigrations&nbsp;[appname]</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">migrate</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：将model里的修改应用到数据库</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;migrate&nbsp;#默认是所有的APP的修改应用到数据库python&nbsp;manage.py&nbsp;migrate&nbsp;[appname]&nbsp;#指定APP的修改应用到数据库python&nbsp;manage.py&nbsp;migrate&nbsp;[appname]&nbsp;[migrations_name]&nbsp;#将操作恢复到指定版本</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">注意：</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">如果执行migrate的命令同时给了应用程序的名字和migtrations名字，系统会把数据库恢复到之前指定的一个版本。</p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;migrate&nbsp;myblog&nbsp;0001_initial&nbsp;#指定blog应用恢复到0001_initial&nbsp;这个版本</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">Django所有的migration信息都保存在django_migrations这个数据库表中，如下图所示：</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><img src=\"https://www.django.cn/media/upimg/clipboard_20190417034155_566.png\" title=\"\" alt=\"clipboard.png\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">如果想撤销所有的数据库更改，我们可以使用 zero代替 上面的命令:</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;migrate&nbsp;blog&nbsp;zero</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">高级用法：</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">如果数据库里，已经手动更新了数据库，我们只是想设置当前的migration状态，就使用下面的命令去实现，这个命令并不会真正的去更新数据库。</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;migrate&nbsp;blog&nbsp;zero</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-weight: bold;\">sqlmigrate</span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：输出某一个migrate对应的SQL语句</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;sqlmigrate&nbsp;blog&nbsp;0001_initial</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: rgb(227, 108, 9); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">showmigrations</span></span></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">作用：显示migrations记录</p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">语法：</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;showmigrations</pre><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><img src=\"https://www.django.cn/media/upimg/clipboard2_20190417034426_899.png\" title=\"\" alt=\"clipboard2.png\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/></p><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">留意：</span>记录前有<span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">[X]</span>的表示已经部署到数据库里去了，没有的则显示<span style=\"box-sizing: border-box; color: rgb(223, 64, 42); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">&nbsp;[ ]</span></p><p><br/></p>',17,'2019-05-16 20:33:43.481166','2019-05-30 17:48:13.596999',1,2,1),(3,'谷歌失败案例：那些年在微服务上踩的坑','Ben Sigelman 是 LightStep 的首席执行官兼联合创始人，他是 Dapper 的共同创始人（Google 的分布式跟踪工具，帮助开发人员理解他们的大型分布式系统），以及开源 OpenTracing API 标准的共同创建者（ 一个 CNCF 内的项目）。在 2018 年 12 月 QCon 大会上 Ben 向我们分享了谷歌在微服务构建路上遇到的经验教训，本文是 Ben 的演讲主要','article_img/2019/05/16/7GKUWH61QHX9DQZZM.png','<h1 style=\"box-sizing: border-box;font-size: 28px;font-family: Arial, 微软雅黑, &#39;Microsoft yahei&#39;, &#39;Hiragino Sans GB&#39;, &#39;冬青黑体简体中文 w3&#39;, &#39;Microsoft Yahei&#39;, &#39;Hiragino Sans GB&#39;, &#39;冬青黑体简体中文 w3&#39;, STXihei, 华文细黑, SimSun, 宋体, Heiti, 黑体, sans-serif;font-weight: 500;line-height: 1.5;color: rgb(51, 51, 51);bottom: 22px;position: inherit;overflow-wrap: break-word;white-space: normal;background-color: rgb(255, 255, 255)\">谷歌失败案例：那些年在微服务上踩的坑</h1><p><img src=\"https://img.huxiucdn.com/article/cover/201905/16/181722079347.jpg?imageView2/1/w/710/h/400/|imageMogr2/strip/interlace/1/quality/85/format/jpg\" alt=\"谷歌失败案例：那些年在微服务上踩的坑\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: 710px;max-width: 100%;height: 400px;object-fit: cover\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><span label=\"备注\" style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">本文来自微信公众号：</span><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=2651016151&idx=2&sn=caa40d813b176a8325d61ca0c1040d19&chksm=bdbeb3848ac93a9224ed992f0e11e4a75626b7107d796c17a4f71335d7d735279ff6d6461453&mpshare=1&scene=1&srcid=0516h1g0yscgZOUv3sld41pu&key=a275743a4180eb546b59b95cd0bfc9bc8b419ab7c5982f31a565f848e8a1e4400efc6ddb9a5e18db883e7d766ab38b3e1d4a4167689c33c7d4436a3d3d88bf35f85bf67d97fdb86d8f737456b219f6a8&ascene=1&uin=MjI5OTkzMzI4Mw%3D%3D&devicetype=Windows+10&version=62060739&lang=zh_CN&pass_ticket=etDb82qTneJAG%2FDUDfJ5VjYzQFue3Sa71CQmzg1PX4ELG8stT2YNC0kgXPEgbIQq\" target=\"_blank\" style=\"box-sizing: border-box;background-color: transparent;color: rgb(51, 51, 51);cursor: pointer;border-bottom: 1px solid rgb(51, 51, 51);padding-bottom: 2px\"><span style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">InfoQ（ID：infoqchina）</span></a><span style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">，作者：Ben Sigelman，译者：禚娴静，头图来源：东方IC<br style=\"box-sizing: border-box\"/></span></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp;Ben Sigelman 是 LightStep 的首席执行官兼联合创始人，他是 Dapper 的共同创始人<span label=\"备注\" style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">（Google 的分布式跟踪工具，帮助开发人员理解他们的大型分布式系统）</span>，以及开源 OpenTracing API 标准的共同创建者<span label=\"备注\" style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">（ 一个 CNCF 内的项目）</span>。在 2018 年 12 月 QCon 大会上 Ben 向我们分享了谷歌在微服务构建路上遇到的经验教训，本文是 Ben 的演讲主要内容的译稿。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">大家好，今天和在座的各位分享一些失败的经验教训。聊一聊这一类的话题要比那些成功案例更有意思。行业在进步，我们可以从过去的错误中吸取经验，并主动在未来的计划中避免，这一点很令人鼓舞。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"大标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 20px;font-weight: 700;color: rgb(164, 29, 29)\">背景信息</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在开始之前，先介绍一下我在谷歌的经历。2003 年大学毕业后我直接加入了谷歌，在这之前我是一个音乐营地的营地顾问，营地顾问之前我在一家冰激凌店工作。我还记得在谷歌的第一天，第一个项目的技术负责人是 Andrew Fights，他现在是类似谷歌杰出的工程师的角色，我记得当时告诉他，我得去找人聊一聊因为实在不知道我在做什么，今天想起来还是很有趣的事情。在谷歌里我像海绵一样快速的吸收技术和其他的信息。今天我在这里谈论的一些事情其实要早于我在谷歌的时间，大约 2000 年和 2001 年左右。让我们从微服务，即谷歌的微服务版本开始讲起。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">当时，谷歌的业务仍然押注在 GSA<span label=\"备注\" style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">（谷歌搜索服务器）</span>产品，其实最终 GSA 也并没有像想象中的那么顺利。当然了，其它事情也是这样，毕竟不能将一个虚拟的垄断产品与像广告这样数十亿美元的巨额业务相对比。不过，谷歌最开始是以搜索起家的，并专注在解决这一类的技术问题。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944650183.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"606\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">接下来要讨论的很多内容的原始驱动力来自于这张幻灯片。在经济危机之前，很多企业都将他们的基础设施构建在 Sun Microsystems 的硬件之上，并将 Solaris 作为操作系统。如果不考虑成本的话，这一套解决方案比现有的其它东西都要好，很多人买了很多这种 Sun box 也是基于这样的原因。但 Sun box 真的很贵，尤其是一个拥有庞大数据中心的企业，整个数据中心需要填满这种机箱以支撑业务的发展，成本就会影响到其业务渠道和活下去的底线。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">谷歌当时就处在这样一个状况。当时的人会很自然的说：“Linux 虽然不够完美，不过功能也够用，它的硬件又很便宜，所以平衡下来我们可以选择 Linux 作为替代”。一定程度上，我也认同这些过往的事情是真实的，当时的人们成本意识很强，所以他们会不遗余力的去解决一系列 RAM、芯片等 Linux 出现的一切故障，以降低成本。而这就带来了一个结果 - 即 Linux 真的不可靠，特别是使用垃圾站硬件的时候，且问题很严重。我认为，谷歌从 Compaq DEC 并购中受益匪浅，这也是导致 90 年代一些真正令人难以置信的研究实验室死亡的原因。许多人比如 Jeff Dean 和 Sanjay Kumar 都来自那个世界，他们现在几乎都是质量工程师。当时的他们对如何在那些难以令人置信的不可靠硬件之上构建软件这个问题产生了强大的兴趣，后面发生的事情也是很多接下来要分享的内容。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944276414.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"605\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">大家都知道，这个问题在 2001 年是没有人解决过的问题，也是他们当下所处的情况。“让我们写一些很酷的软件，看看 Github 上有什么”。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944501831.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"603\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">然而在 2001 年并没有什么可以替代的方案，所以必须自己做。另一个问题是非常古怪的扩展要求。他们试图做一些当时非常大胆的事情，即索引每个网页的每个字。一些人将每个网页的每个单词收录并编入索引，其他人只是给它建立索引，然后丢弃那些限制竞争对手能力的原始数据。这是一项艰巨的任务，需要用到当时根本不存在的计算机软件。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">因此，由于不可靠的 Linux 盒子，该软件必须横向扩展，并且必须在堆栈的任何组件中容纳频繁的例行故障。之前有一篇很棒的文章提出了“机器是牛而不是宠物”。我认为在这件事情上谷歌做对了。这些机器没有来自“星际迷航”的酷炫名字，它们只是 AB 1,2,5,7 类似的东西，那也是机器名。系统对它没有太多的依赖，它死了或者继续运行都不会影响其它部分。这个问题让人们开始思考如何建立更具弹性的系统。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">以上是我如何描述事物的方式。在谷歌很多人都有博士学位。记得面试时，我还没有博士学位。而且，我只跟一个没有博士学位的人谈过，面试结束时，他说，“别担心，现在开始雇用没有博士学位的人了”，在那里有很多人比我更聪明，并且真的想将他们的知识应用到 CS 系统研究中，将这种类型的经验和知识应用于现实问题是一件很有趣的事情。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944472774.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"605\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在谷歌有很多自下而上的决策，我的第一位经理在我加入时有 120 位直接汇报人的这一事实也说明了这一点，决策的制定是分散且唯一，那里是一个有抱负的文化氛围，也是一个非常以任务为导向的组织，既有基础设施，还有公司层面，特别是在那个时候，它是一个非常纯粹的理想主义组织。具有讽刺意味的是，现在看到新闻时感觉事情发生了很大的变化，至少就公众形象而言，当然重要的是要记住时间，而且我承认也许有点过分自信。人们可能觉得他们有能力做任何事情，愿意尝试新的大的挑战，并假设确实可以实现，这很酷有很高的风险，但也很有趣。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"大标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 20px;font-weight: 700;color: rgb(164, 29, 29)\">那些发生的事情</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">那么，这样的工程要求和文化氛围实际导致的结果是什么呢？</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944511175.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"607\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这是一张寒武纪大爆发的图，寒武纪大爆发是进化史上的一个时期，生物多样性迅速，是多种因素共同作用的结果。我今天早上读了维基百科，以确保我引用的事实是正确的。它与氧气的增加有关，钙的增加使得这些生物能够制造它们的壳。那时的许多事情都发生在大致相同的时间，在 2000 万年间，生物多样性的增长非常迅速。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944950303.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"611\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在谷歌也有类似的东西，业务需要构建一个非常大的架构，这个架构需要围绕软件和认为他们可以尝试一些新事物的文化背景而构造。这就导致了在谷歌类似寒武纪大爆发一样的很多基础设施项目的爆发，许多项目现在已经众所周知，如 GFS-Google 被广泛使用的文件系统， BigTable 是 Cassandra 之前的产品，著名的 MapReduce、Borg 是类似于 Kubernetes-ish 的项目。有人可能会因为我这样的观点生气，但它应该很接近真实的情况，也还有一些没有公开但令我印象深刻的项目。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">其实不仅这些重要的项目众所周知，他们撰写的论文也使得这些案例在 Google 之外传播开来。这些项目与 Hadoop 项目之间存在一对一的对应关系，并从开源社区推广。但这带来了一个问题，他们引领谷歌的文化走向崇拜这些项目，人们会认为在一些与大型基础设施结构相似的项目上工作真的很酷。这份清单上的所有内容当然都是必要的，Google 也从中受益匪浅。然而谷歌内部的这些货物崇拜导致人们试图模仿这些系统的设计而不去理解为什么选择这些设计。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944091096.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"602\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这些设计在很多方面看起来很像今天的微服务。这就是为什么我们不把它称为微服务，在结构上它们看起来很像微服务。起初想要创造一种可以水平扩展的东西，想要分解像 RPC 服务发现这样的用户级基础设施，但现在“服务网格”中的内容已被考虑到这些巨大的客户端库中，这些库在今天的谷歌被广泛使用，被称为谷歌 3。在谷歌 3 构建一个 Hello World 的二进制文件，它需要消耗 140 兆字节的二进制文件，且只是为了链接这个用户级别的内核。谷歌 3 为了完成所有这些工作而将其考虑在内，后来也转向了一些看起来有点像 CI、CD 的东西。它开始感觉很像微服务了，但是这样做的决定是出于计算机科学的需求，我认为这是今天大多数组织构建微服务的一个有趣的理由。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"大标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 20px;font-weight: 700;color: rgb(164, 29, 29)\">经验教训</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"小标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 18px;font-weight: 700;color: rgb(164, 29, 29)\">第一条：开始之前需要明确构建微服务的原因</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944541486.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"608\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我认为构建微服务的唯一充分理由是组织结构，并且这也应该是大多数组织构建微服务的唯一原因。然而，这并不是谷歌构建微服务的原因。谷歌构建微服务是为了计算机科学，在这里，我不会去争辩从这个角度构建微服务其实也没有什么好处，当然肯定是有很多痛点驱动。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">开始构建微服务之后，如果简单的认为它一定会很顺利，也没有事先调研所有可能的失败情况，那么一定不会顺利，而且实际上也可能会带来很多令人遗憾的结果。我和很多企业讨论过这个问题，这些企业也因为迁移的过程实在太痛苦了而放弃了向微服务的迁移。所以，一定要事先了解构建微服务的动因。就像谷歌里有很多人效仿大型的基础设施项目一样，有时我认为他们在构建一些并不必须的架构。理智的投资方式应该是遵循以下原则：“如果你不需要就不要去做，否则只会会让事情变得更困难”。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这样做的主要原因是最大限度地减少团队之间的人员沟通成本，一个超过 10 个或 12 个人的团队无法在一个工程项目上成功协作，它与人员沟通结构和工作授权有很大关系。因此，将项目团队映射到微服务可以减少人与人之间的沟通开销，从而提高开发速度。这是一个选择微服务的合理原因，但这也并不是我们在谷歌构建微服务的原因。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944290560.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"606\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">其实谷歌的微服务不是预先设计的结果，只是一件意外产物。我听到过很多人分享他们采用微服务的原因，对我而言他们从根本上还是技术驱动。我并不是说这些是错的。但我认为，如果这是你选择微服务的原因，那么至少你应该慎重的考虑并确认微服务是当下唯一的技术选择，没有其它的替代办法。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944285372.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"607\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我经常从管理层那里听到很多实施微服务后带来的痛苦。我也构建过很多使所有 Google 受益的监控系统，也会不可避免地讨论我们的客户——Google 内部的项目，其中一些是搜索和广告等内容，一些是在 Google 云端硬盘管理控制台中很少听说过的功能，它可能是为谷歌云端硬盘服务的一个非常重要的项目，但吞吐量并不高，有着一套与搜索和广告都不同的要求。而且，来自搜索和广告的经验教训只对大规模的服务有意义。就像 Jeff Dean 所说的一句话，一个支撑超过三四个数量级以上规模的系统是无法设计出来的。基于此，我认为在系统的能力集和功能集，以及系统规模之间存在一个自然的取舍。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">可以用一个例子来理解它：如果我们构建了一个具备大规模扩展能力的系统，那么由于这样一种自然的规律，在某些角度就必须承认它的功能特性可能很差。我们在谷歌构建的系统具备超级超级的可扩展能力，现在谷歌的公开数据是每秒 20 亿次 RPC 调用，这比我想象的实际需要的要多得多。如果要通过扩展来实现这种请求量，那么必将牺牲很多功能，而这也是在谷歌发生的事情。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">Dapper 通过积极的采样分析解决了这个问题，但坦白说，也给低吞吐量的系统带来了糟糕的体验。Kubernetes 项目大概不会真正适用于 Google 的现状。当触及实质问题的时候，我们会发现 Borg<span label=\"备注\" style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">（谷歌内部的大型集群管理项目）</span>从很多角度都可以说是一个非常不同的系统。这些取舍在很多地方都会发生，但对于应用程序员们的结果是，他们有大量的需求用来标准化微服务的开发工作，而所参考的微服务本质上却来自搜索与广告领域，小型服务的程序员开发体验因此会变得非常糟糕。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在谷歌，要想将一个服务投放到生产环境是一件很麻烦的事情，因为所有的需求都必须支持搜索和广告的水平扩展，即使一个很小的项目也要强制执行。我还记得，我以 20% Project 的方式完成了谷歌天气项目，当你搜索旧金山的天气，谷歌天气就会出现。我一周内完成了原型开发，接下来的几个星期内完成了核心代码的生产版本，但总共花了六个月的时间 。实际上也并不是六个月就把它发布了，因为我还要完成很多上线必须要做的任务清单任务。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">如果一个微服务专注于解决计算机科学研究的问题而非速度，那么就会发生这种情况。我认为，开始之前应该明白将要完成的事情，并确保可以专注于速度，保持合理且适合当下实际构建的服务类型的任务清单。因为促进高吞吐量不同于高工程速度；也不需要考虑低延迟；而低延迟非常重要，但是在吞吐量和工程速度之间需要取舍，反映在技术决策则体现在是否应该使用 JSON 进行通信，还是某些非常严格的二进制协议，亦或考虑监控的可观察性方面。这些事情会让你的进度慢下来，而大多数的谷歌项目并没有像搜索和广告一样的规模，所以就会非常的痛苦。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"小标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 18px;font-weight: 700;color: rgb(164, 29, 29)\">第二条：无服务器服务仍然运行在服务器上</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944162697.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"605\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在谷歌我们也没有称它为无服务器。上面图中是一个测试，”火腿三明治、费德勒、怪物卡车、富士山和亚马逊的 Lambda“，这些其实都是无服务器的，它们只是一些没有任何意义的术语，所以我非常讨厌无服务器这个词。就像 NoSQL 一样，我们不应该将这其中一些小事物的反面词语作为营销术的术语。这些词语没有任何意义，但是这就是我们生活的世界。我将继续称之为 FaaS——功能即服务，这个词至少有意义。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944095571.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"605\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这张图显示了每一个工程师都需要知道的一些数字 - 系统运行中不同活动的延迟时间列表。从上向下的第五个是读取主要内存数据的延迟时间，可以理解为如果有一个缓存未命中，到达主内存需要大约 100 纳秒。如果要在一个数据中心内完成一个 RPC 调用，那时间就远远不止于此。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944307922.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"605\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这是另一张同样活动的数字，主内存数据大约是 100 纳秒~十分之一微秒，速度很快。即使在同一数据中心内往返，仍然不到一毫秒。所以，当把它与人的速度类比的时候，它的速度感觉有点快，但如果你把它们放在一起，就会发现真的非常不同。而且我认为有一种趋势，将事情分解成越来越小的部分会变得非常有趣，以至于我们会忘记了其实两个进程间通过网络通信的成本非常高。我也确实看到很多人在这个方向上走的太远，再次强调一下，这还是痴迷于单一目的服务的理念，也是盲目蛮干的失败模式。 我宁愿看到围绕工程组织中的功能单元构建服务，并考虑一定的分区，而不是将事情细分为尽可能小的部分。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我有些担心无服务器运动或 FaaS 运动。有时你可以摆脱完全令人尴尬的并行，但在其他情况下缓存真的很有帮助。如果你正通过网络进行缓存，Mem Cache 有时是合适的，但是，在使用之前要确保完成背后的那些工作，包括如何支撑串行调用的次数，它是否会影响最终用户的延迟，当前的系统状况。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">所以，我认为这是微服务的另一种失败模式，而现在无服务器的市场很大，所以外部市场实际发生的事情远多于我在 Google 内部所看到的。如果我们想消除对系统运行的担心，那么 Etsy 文件及类似的东西都可以解决问题。但是，如果我们将功能作为一项服务专门讨论，请注意一旦卖出概不退换，所以请确保那些功能真的是适合你的系统需求。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"小标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 18px;font-weight: 700;color: rgb(164, 29, 29)\">第三条：独立并不是绝对的</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我们之前谈到过采用微服务的根本原因是团队沟通成本和独立的思考等。它开始让我觉得有点像嬉皮士。就像每个人一样...... 每个团队都是一个独立的决策单位。他们会嬉闹，需要做的只是决定 API，发送请求然后响应。在微服务架构下，每个团队可以做他们想做的任何事，它是平等和美丽的。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这些实际上是来自我之前对话的一家公司，他们不得不将已经完成的微服务回滚。在为单个服务写代码的时候开发工作还是很顺利的，但在部署的时候问题就来了，交叉出现了一系列的跨服务横切关注点，尤其在生产环境中。那些显而易见的关注点包括安全性、监控、服务发现、身份验证等。这些都是跨功能的关注点。这时候会面临两个问题，第一个问题，每一个团队都必须承担运维压力，而每一个团队的规模相对较小，所以必须要付出额外的成本。第二，其中一些事情是全局的问题，特别像可观察性，需要从系统的全局进行设计，而这样的事情如果每个团队自己做决定，将会失去统一有效的机制。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">Jessica 也谈到了这一点。听起来 Airbnb 正在以正确的方式接近这个方向，但这是一个重大问题。我认为，当人们追求微服务的独立性时，他们应该考虑哪些维度实际上是独立的，哪些维度应该委托给某类平台团队。我今天早上和 O&#39;Reilly 的一个人谈论了可能对微服务领域有帮助的书籍，其中我认为看一本关于在微服务项目和人员管理方面的书会很有用，可以有助找出应该独立的和不应该独立的那些因素。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944659730.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"600\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在这个问题上，我认为蚂蚁做对了。蚂蚁，无论性别身份如何，都是独立的。它们独立完成自己的工作，但是会坚定遵循蚁群的行为规则。有时蚂蚁们可能很痛苦，但是蚁群这样做的目的为了获取更大的利益。尽管这对单只蚂蚁来说可能是令人沮丧的，但这就是蚁群可以活下去的工作方式。就如有时候使用一个简短前缀的语言菜单和技术令人很沮丧，但是如果你的组织有一个支持微服务的短平台列表，这大概是最好的选择。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在这个方面我认为谷歌做的对，谷歌对事物的分解有时候近似疯狂，在某种程度上，我建议尽可能将事情从你的服务中独立出来。我喜欢蚂蚁，图中显示了它们的服务发现，如果蚂蚁们通过随机散步找到了食物，它们会返回巢穴并沿路留下信息素，随后其他蚂蚁闻到并跟随它找到食物源。蚂蚁们非常聪明。在大学，我们有一个有趣的编程作业来模拟蚂蚁的这种行为——一种非常优雅且效果很好的集体行为。当有威胁时，蚂蚁们会进行一系列的智能安全措施并聚集幼虫，它们会把所有的熔岩都带走并隐藏起来，这是蚁群为了共同的利益而采取的集体行为。蚂蚁们还构建了一些令人惊奇的物体，尤其考虑到它们是昆虫类动物，蚂蚁绝对称得上是优秀的工程师。他们做的对。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我认为，在微服务中需要更多地考虑蚂蚁精神而不是嬉皮士精神。在这个时代，嬉皮士精神可能不应该进入工程管理领域，这是微服务的错误信念和价值观。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"小标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 18px;font-weight: 700;color: rgb(164, 29, 29)\">第四条：警惕巨大的仪表板</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我曾在谷歌的 Dapper 和 Monarch 项目工作过，Monarch 这个项目在谷歌并没有太多的记录，John Banning 曾在 Monitorama 分享过。Monarch 的规模非常大，它以服务的方式运行，基本上就像是一个为整个谷歌设计的高可用性时间序列监控系统。在这个项目中，我花了大量时间与 Google 的 SRE 团队交流，其中有一些非常棒的实践给了我很多启发。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">Cody Smith 是负责网络搜索的 SRE。网络搜索作为仪表板设计的非常紧凑，就像十几棵草攒在一起，但却具有令人难以置信的时间保真度。就如每秒分辨率，存在一百万个维度去解释图形中的任何变化以及某种维度的过滤聚合。还有其他的项目也有这些巨大的仪表板，有很多很多页的信息。它们背后的设计思路是可以通过扫描所有的信息并找到其中的问题或类似的问题。但我认为这是一个非常糟糕的模式。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944185339.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"597\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这是内部仪表板中的一组图表。通过这张图，很明显可以看出这里大约在 12 点出现了一些问题，而这里的高峰期是 12:20 左右，另一边的图显示峰值在 12 点之前，这些图标显示的数据大都相关。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944529389.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"611\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">然而，这么多呈现的图表，接下来我们应该查看哪一个进一步定位问题？我一点概念都没有。真正了解这些系统的人可能通过一些细节可以辨识这些图标背后的含义，但如果是正在随时待命处理生产环境问题的运维人员则必须快速找出问题，这个仪表板则是一个糟糕的情况，有八个图表，还有另外十几个显示相同的情况。另外，还有的仪表板的页面一次又一次地显示同一个故障，这样实际上对于分析问题也并不可行。然而对微服务架构来说这是一个重要问题，每个服务都会生成大量的仪表板或 RPC 和服务网格等等，包括业务指标。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">之后，仪表板会呈现分布式系统中的级联故障，这些故障在很多地方都可以看到。微服务的本质是服务间具有相互依赖关系，A 依赖 B，B 依赖于 C，C 依赖于 D，D 出现了一次故障且反映在 CBNA 中。在仪表板中，应该可以通过查看波浪线找出根本原因，然而现实却不是这样。仪表板应该服务于 SLI 即服务水平指标，它代表了消费者关心的内容，之后的根因分析则需要基于此进行引导分析和改进。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944060254.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"602\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">我认为可观察性包括两件事，一个是检测关键信号，即 SLI 的部分，它需要非常精确；另一个则是改进搜索空间。每增加一个微服务，可能发生的故障模式的数量随着服务数量的增长而几何式增长。我并不认为机器学习或 AI 可以神奇地解决这个问题。我们需要尽快发现可以帮助减少人脑假设的方法，只有在使用巨型仪表板之外的技术时才能实现引导过程。巨型仪表板在单体环境中运行良好，但我看到人们采用这种理念并围绕它构建微服务的可观察性。我认为有必要使用仪表板，但肯定不够。我采访过的 SRE 小组当时正在构建巨大的仪表板，我们的效率明显低于让它设计上更紧凑的团队，之后再使用其他工具来改进搜索空间。所以，不要混淆搜索空间的可视化和对它的精炼优化。整个搜索空间太大了且无法可视化，而且人类迄今也无法处理那么多信息。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在 LightStep，我们看到很多客户一直在努力解决这类问题。我不知道在座的各位是否经历过同样的情况，但我认为这是一种失败模式，谷歌肯定也明白这一点。曾经有一个大型的 Google 服务，大概名字是家庭类型之类的服务，它不得不使用代码生成器生成告警配置，最终导致了 35,000 行还要长的代码。我不记得其中的所有原因。但随后他们不得不开始手动维护这 35,000 行代码，然而这些配置是在 Google 内部完全模糊的 DSL 中编写的，手动维护所带来的痛苦程度无法比拟，这就是因为他们混淆了对 SLI 的告警信息和可能是根本原因的告警信息。监控不应该对根本原因发出告警，它应该是细化过程的一部分；而应该对 SLI 发出告警，对于任何特定系统，SLI 的信息不会有那么多而导致无法处理。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"小标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 18px;font-weight: 700;color: rgb(164, 29, 29)\">第五条：无法跟踪一切</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">这条教训来自 Dapper 项目。在某种程度上和之前对谷歌系统的评价类似，”当一个系统变得如此庞大时，它所提供的解决方案功能集会相对的减少”。我们当时正在与搜索和广告对 Dapper 的要求进行抗争，它们要求 Dapper 每秒支持数亿次查询，而我们能做到的唯一方法就是积极地进行采样分析。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944819507.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"605\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">微服务的结构看起来很像多边形，在运行中会产生事务经过这些组件，有些事务也会调用多个其它服务，所以了解一个微服务系统最基础层面发生的事情可以更好的维护和提供服务，诸如服务请求的起点、它的旅程直到请求的结束，这就是分布式跟踪的最基本想法。如果没有实现这样的功能，另一种可替代的方式则是让其他人通过电话帮助调试，但实现起来非常痛苦。分布式跟踪的功能对于分布式系统来说非常有价值。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944663503.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"609\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">它的问题是跟踪在这个图的数据科学和数据工程中有一个黑暗的秘密跟踪。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944951399.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"603\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">图中呈现了数据卷的真实检查数据，可以看出堆栈顶部的实际事务数量，随着业务增长，这个数据的总量大概需要再乘以服务数量。因此，当迁移至微服务后，数据量也会相应增长，这个增长与事务总数不成比例，但与服务的数量成正比，大概是乘以网络成本和存储此数据的成本，之后还需要将数据存储一段有效时间。基本上，从第一原则的角度来看，微服务系统中的数据太多。在更快的网络或更便宜的存储被发明之前，现在的数据真的太多了。这个问题会反映在过高的 Splunk 账单或者 ELK 失效。但如果你使用日志记录作为跟踪数据，然后尝试使在同一管道中聚合，这个问题就会发生。分布式跟踪通常被认为是这些时序图，但实际上它只是一种使用内置采样机制进行事务性日志记录的方法。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944753047.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"610\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">对于 Dapper，我们需要将其用于 Web 搜索和广告，也因此而积极的采样分析。我们在交易之前做的第一件事就是翻转一枚硬币选择它作为样本数据，这样可以将数据量减少 99.9％，这种方法很有帮助。然而，事实证明这还不够，即使将 1000 个中的一个请求集中在一起的成本也很昂贵。因此，在全局集中这些数据之前还需要进行进一步的抽取 1:10000，之后可以 MapReduce 以及更复杂的分析。这就是在 Google 完成这项工作所必需的。然而，就我个人而言非常后悔并对此种做法深感遗憾。坦率讲，相较于在 Dapper 的做法，我认为应该可以找到另一种方法提供更多的按钮并且更面向长远的考虑，这也是我为什么会成立 LightStep 的原因。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">Dapper 由 Sharon Pearl 和 Mike Burrows 两人创办，他们都来自前面提到的 Compaq DEC 并购，但对此并不是很开心。Mike 在微软研究院工作过，那时他在研究 Bing 搜索产品，当他去谷歌时，有人称他的背景并不允许他在谷歌工作。他喜欢搜索，之后他创建了 Chubby，有点像 Zookeeper，同时还参与了许多其他项目。而 Sharon 促使了我加入 Dappe。 在早期的职业生涯里，谷歌做过这样一件事情：他们会在组织里给你匹配一个与你尽可能不同的人，他们会从九维空间的角度进行员工走查，包括工作的语言、离开学校的时间、办公地点、汇报结构等。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">在参与这项调查的人里面，Sharon 是与我最不相同的那个人，当时我还在广告项目，并不是很喜欢当时的工作。Sharon 给我列出来她正在参与的一系列项目，并提到了 Dapper，而他们当时真的不想将它产品化。我听了之后却喜欢上了它，“这听起来比我正在做的事情更加有趣”，之后我管理了大约 120 份报告，我开始研究它想做一些更野心勃勃的事情，我的导师 Luis 在这当中也建议我 “这足以让人在谷歌的每台机器上跑步了。你为什么不先解决它？”这真的是一个有些政治和堑壕战的项目，但这就是他告诉我要做的事情。我也做到了，但我真的后悔了。因为其实还有很多其它的方法可以解决这个问题。这无关我的 LightStep 项目，相比于方法，LightStep 给出了很多可以了解系统的机会。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p label=\"大标题\" style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;font-size: 20px;font-weight: 700;color: rgb(164, 29, 29)\">总结</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;text-align: center\"><img src=\"https://img.huxiucdn.com/article/content/201905/16/175944283884.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"601\" style=\"box-sizing: border-box;border: 0px;vertical-align: middle;width: auto;max-width: 100%\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">&nbsp; &nbsp; &nbsp;</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\">最后总结一下，我认为选择微服务有两个驱动因素：独立和计算机科学。开始微服务之前要确保在组织级别推进微服务的原因。构建微服务的目的在于优化速度，它不是指工程速度，也不是指系统吞吐量。一件事情开始的原因不同会导致不同的结果。第二，需要了解所选解决方案的适合规模。对于整个无服务器 FaaS 话题，不要因为它很有趣而继续缩小和缩小。“尝试做个蚂蚁，而不是嬉皮士”。第三，可观察性不是关于三大支柱，它只是有关数据的检测和改进。考虑一下这些工作流程，跟踪所有内容则是可能的。从调试和性能优化角度来看，这是解决此问题的一种有趣方式。</p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br label=\"备注\" style=\"box-sizing: border-box\"/></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><span style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">原文：https://www.infoq.com/presentations/google-microservices</span></p><p style=\"box-sizing: border-box;margin-top: 0px;margin-bottom: 0px\"><br style=\"box-sizing: border-box\"/></p><p><span style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">本文来自微信公众号：</span><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=2651016151&idx=2&sn=caa40d813b176a8325d61ca0c1040d19&chksm=bdbeb3848ac93a9224ed992f0e11e4a75626b7107d796c17a4f71335d7d735279ff6d6461453&mpshare=1&scene=1&srcid=0516h1g0yscgZOUv3sld41pu&key=a275743a4180eb546b59b95cd0bfc9bc8b419ab7c5982f31a565f848e8a1e4400efc6ddb9a5e18db883e7d766ab38b3e1d4a4167689c33c7d4436a3d3d88bf35f85bf67d97fdb86d8f737456b219f6a8&ascene=1&uin=MjI5OTkzMzI4Mw%3D%3D&devicetype=Windows+10&version=62060739&lang=zh_CN&pass_ticket=etDb82qTneJAG%2FDUDfJ5VjYzQFue3Sa71CQmzg1PX4ELG8stT2YNC0kgXPEgbIQq\" target=\"_blank\" style=\"box-sizing: border-box;background-color: transparent;color: rgb(48, 48, 48);cursor: pointer\"><span style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">InfoQ（ID：infoqchina）</span></a><span style=\"box-sizing: border-box;color: rgb(153, 153, 153);line-height: 30px\">，作者：Ben Sigelman，译者：禚娴静</span></p><p><br/></p>',25,'2019-05-16 20:44:14.116607','2019-05-31 18:40:05.161231',3,1,1),(4,'自研系统，能解决华为当下的困境吗？','紧张时刻，华为再次遭遇重创。\r\n谷歌母公司 Alphabet 已按特普朗要求，停止与华为相关的业务和服务，涉及硬件、软件和技术服务，谷歌还将停止就安卓和谷歌服务为华为提供技术支持和协作。\r\n华为将失去对谷歌安卓操作系统的更新访问权限，只能使用开源版本。Google Play商店、Gmail、地图、YouTube 等谷歌全家桶应用和服务，也不再能使用，简单来说，华为将无法得到 GMS 认证。','article_img/2019/05/28/170312883354.jpg','<h1 class=\"t-h1\" style=\"box-sizing: border-box; margin: 0px; font-size: 28px; font-family: Arial, 微软雅黑, &quot;Microsoft yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;冬青黑体简体中文 w3&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;冬青黑体简体中文 w3&quot;, STXihei, 华文细黑, SimSun, 宋体, Heiti, 黑体, sans-serif; font-weight: 500; line-height: 1.5; color: rgb(51, 51, 51); bottom: 22px; position: inherit; overflow-wrap: break-word; word-break: normal; white-space: normal; background-color: rgb(255, 255, 255);\">自研系统，能解决华为当下的困境吗？</h1><p><br/></p><p><img src=\"https://img.huxiucdn.com/article/cover/201905/20/170312883354.jpg?imageView2/1/w/710/h/400/|imageMogr2/strip/interlace/1/quality/85/format/jpg\" alt=\"自研系统，能解决华为当下的困境吗？\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: 710px; max-width: 100%; height: 400px; object-fit: cover;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">紧张时刻，华为再次遭遇重创。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">谷歌母公司 Alphabet 已按特普朗要求，停止与华为相关的业务和服务，涉及硬件、软件和技术服务，谷歌还将停止就安卓和谷歌服务为华为提供技术支持和协作。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">华为将失去对谷歌安卓操作系统的更新访问权限，只能使用开源版本。Google Play商店、Gmail、地图、YouTube 等谷歌全家桶应用和服务，也不再能使用，简单来说，华为将无法得到 GMS 认证。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">需要注意的是，<span style=\"box-sizing: border-box; font-weight: 700;\">没有 Google 支持，不仅仅是无法使用 Google 全家桶的问题，诸如 Facebook、WhatsApp、Instagram 等应用都会因为“缺少 GMS 认证”，而无法正常使用。</span>这些应用对于当地消费者有多重要不用多说，换个角度想，如果一部中国销售的手机无法使用微信、QQ、支付宝、微博，你还愿意购买使用吗？当然，得益于安卓开放的特性，你总能“魔改”出一部能正常使用的手机，但问题是，有多少普通消费者愿意这样做呢？</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">目前，消费者业务已经占到了华为近一半的收入，而消费者业务中，也有近半是来自海外市场。可以确定的是，短期内，华为终端海外的业绩会受到非常大的影响，这对于立志超越三星的华为来说，是一个十足的坏消息。<br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"大标题\" class=\"text-big-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 20px; font-weight: 700; color: rgb(164, 29, 29);\">“内供版”自研系统靠谱吗？</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">而 Android 受限后，华为自研操作系统的话题再一次被拿出来讨论。今年余承东在接受德国媒体 WELT 的采访时承认，华为已经准备了自己的操作系统：“一旦发生了我们不能够在使用这些（来自Google和微软的）操作系统的情况，我们需要做好准备。这是B计划。”</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">有了海思麒麟的成功经验，外界也在期待着华为的自研系统。但实际情况是，<span style=\"box-sizing: border-box; font-weight: 700;\">系统涉及到生态问题，远比硬件复杂，自研系统的远水，可能还解不了华为的近渴。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">理论上，在 Android 和 iOS 占据如此统治地位的情况下，第三个操作系统几乎没有突围的可能性。从零开始重新做一个操作系统何其困难，强如微软，也在 WP 上栽了个大跟头，三星投入的 BADA、Tizen 也没能掀起什么水花。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">乐观的方面是，由于某些众所周知的原因，中国互联网一直是脱离于世界，独自发展的。我们日常使用的大部分应用，都是来自于中国公司。微博、微信、淘宝、支付宝、今日头条、抖音等等，你几乎想不到一个海外 App，在中国是不可或缺的，那些海外独角兽们，进入中国市场，往往也会铩羽而归，中国的移动互联网，已经形成了自己独立的生态。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">对于一款新系统来说，只要解决了这些超级应用的适配，就足以满足相当数量用户的日常使用需求，这个“备胎”，至少能拿到及格分。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">但真正的问题不在这。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"大标题\" class=\"text-big-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 20px; font-weight: 700; color: rgb(164, 29, 29);\">海外才是问题的关键</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">假设华为现在拿出了一个足够可用的系统，在国内也得到了一部分应用的支持，甚至开始逐渐开始普及。<span style=\"box-sizing: border-box; font-weight: 700;\">但最关键的海外问题呢？还是没有解决。</span>现在华为最大的问题，是海外受阻，Google 的合作全面暂停，在中美关系紧张的当口，华为如何解决海外应用问题？如果无法建立健康的合作关系，来自美国的应用依然不会支持华为系统的普及。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">欲加之罪，何患无辞，美方能找出 800 个理由，让美国的公司不去支持华为的系统，科技无国界，但公司有，一直喊着 Do The Right Thing 的 Google，也第一时间站出来“封杀”了华为，显然我们不能太乐观。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">当然，你可以说这是为了防止完全无法使用 Android 而做的准备，但问题是，AOSP 是开源的，谁也拦不住你使用。在今天的回应中，华为的措辞也是“安卓作为智能手机操作系统，一直是开源的，<span style=\"box-sizing: border-box; font-weight: 700;\">华为作为重要的参与者，为安卓的发展和壮大做出了非常重要的贡献。华为有能力继续发展和使用安卓生态。”</span>对于华为，至少是当下的手机产品来说，使用安卓还是更稳妥的选择，自研系统，目前的战略价值，远高于实用价值。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">任正非在 2012 年，曾有过这样的担忧：“我们现在做终端操作系统是出于战略的考虑，如果他们突然断了我们的粮食，Android 系统不给我用了，Windows Phone 8 系统也不给我用了，我们是不是就傻了？”</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">但这是一个悖论，我们在全球化的蜜月期时，想大力发展自己的操作系统，会面对“重复造轮子”等重重压力，投入产出比极低；而当国际形势紧张，合作突然暂停时，你即便有“备胎”，对方依然可以在应用、生态上卡你的脖子，而对于华为这样的厂商来说，不可能完全放弃海外市场。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">总结一下，居安思危的战略思维，值得提倡，但那要建立在一个健康、稳定的市场环境下。华为现在掏出个自研系统，还无法完美地解决当下的困境。华为的研发投入和实力值得肯定<span style=\"box-sizing: border-box; font-weight: 700;\">，但真正能让这一切重回正轨的，还是政治，而非科技。</span></p><p><span class=\"c2\" style=\"box-sizing: border-box; color: rgb(144, 144, 144);\">*文章为作者独立观点，不代表虎嗅网立场<br style=\"box-sizing: border-box;\"/></span><span style=\"box-sizing: border-box;\">本文由&nbsp;<a href=\"https://www.huxiu.com/member/2061955.html\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(48, 48, 48); text-decoration-line: none; cursor: pointer;\">我不叫塞尔达</a>&nbsp;授权&nbsp;<a href=\"https://www.huxiu.com/\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(48, 48, 48); text-decoration-line: none; cursor: pointer;\">虎嗅网</a>&nbsp;发表，并经虎嗅网编辑。转载此文章须经作者同意，并请附上出处(<a href=\"https://www.huxiu.com/\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(48, 48, 48); text-decoration-line: none; cursor: pointer;\">虎嗅网</a>)及本页链接。原文链接：https://www.huxiu.com/article/300148.html</span></p><p><br/></p>',11,'2019-05-27 21:44:36.395360','2019-05-30 17:31:32.403905',3,2,1),(5,'推荐新手入门nginx和uwsgi详解','nginx接收到浏览器的http请求,将包进行解析,分析url,如果是静态文件直接访问用户给nginx配置静态文件目录,如果不是静态文件,是一个动态请求,nginx会转发给uwsgi,uwsgi接到请求会进行处理成wsgi可以接受的形式,并发给wsgi,wsgi根据请求调用应用程序的某个文件','article_img/2019/05/28/u20555151692116955154fm26gp0.jpg','<p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">什么是nginx</span></p><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></span></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; overflow-wrap: break-word; font-size: 12px; font-family: &quot;Courier New&quot; !important;\">&nbsp;&nbsp;&nbsp;&nbsp;nginx是一个开源的,支持高性能,高并发的代理服务软件\r\n&nbsp;&nbsp;&nbsp;&nbsp;nginx不但是一个优秀的web服务软件,还可以作为反想代理和负载均衡,以及缓存服务或使用</pre><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></span><br/></p><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">为什么使用nginx</span></p><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;</span></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; overflow-wrap: break-word; font-size: 12px; font-family: &quot;Courier New&quot; !important;\">&nbsp;&nbsp;&nbsp;&nbsp;支持高并发,能支持几万个并发链接&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;资源消耗少,三万并发编程开启10个nginx线程消耗不到200m\r\n&nbsp;&nbsp;&nbsp;&nbsp;可以做反向代理和负载均衡\r\n&nbsp;&nbsp;&nbsp;&nbsp;支持异步网络io事件模型epoll\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uWSGI&nbsp;是一个全站式的托管服务，它实现了应用服务器（支持多种编程语言）、代理、进程管理器、监视器。取名为&nbsp;uWSGI&nbsp;是因为它最早实现的是&nbsp;Python&nbsp;语言的&nbsp;WSGI</pre><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></span><br/></p><p style=\"margin-top: 5px;\">nginx和uWSGI 的意义</p><p style=\"margin-top: 5px;\"><br/></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; overflow-wrap: break-word; font-size: 12px; font-family: &quot;Courier New&quot; !important;\"><p>nginx接收到浏览器的http请求,将包进行解析,分析url,如果是静态文件直接访问用户给nginx配置静态文件目录,如果不是静态文件,是一个动态请求,nginx会转发给uwsgi,uwsgi接到请求会进行处理成wsgi可以接受的形式,并发给wsgi,wsgi根据请求调用应用程序的某个文件,<br style=\"margin: 0px; padding: 0px;\"/>某个文件的某个函数处理完会返回给wsgi,wsgi将返回值进行打包,打包成uwsgi能够接受的格式,uwsgi接受wsgi的发送请求,转发给nginx,nginx最终将返回值返回给浏览器<br/><br/><br/>为什么不用uWSGI作为唯一服务器<br/> &nbsp; &nbsp;1 安全问题，程序不能直接被浏览器访问到，而是通过nginx,nginx只开放某个接口，uwsgi本身是内网接口，这样运维人员在nginx上加上安全性的限制，可以达到保护程序的作用。<br/><br/> &nbsp; &nbsp;2负载均衡问题，一个uwsgi很可能不够用，即使开了多个work也是不行，毕竟一台机器的cpu和内存都是有限的，有了nginx做代理，一个nginx可以代理多台uwsgi完成uwsgi的负载均衡。<br/><br/> &nbsp; &nbsp;3静态文件问题，用django或是uwsgi这种东西来负责静态文件的处理是很浪费的行为，而且他们本身对文件的处理也不如nginx好，所以整个静态文件的处理都直接由nginx完成，静态文件的访问完全不去经过uwsgi以及其后面的东西。<br/> &nbsp; &nbsp;<br/> &nbsp; &nbsp;<br/> &nbsp; &nbsp;uWSGI 和 Nginx 的关系<br/>从上面的讲解中，我们知道，uWSGI 可以起到 Web 服务器的作用，那么为什么有了 uWSGI 还需要 Nginx 呢？<br/>最普遍的说法是 Nginx 对于处理静态文件更有优势，性能更好。其实如果是小网站，没有静态文件需要处理，只用 uWSGI 也是可以的，但加上 Nginx 这一层，优势可以很具体：<br/>对于运维来说比较方便，如果服务器被某个 IP 攻击，在 Nginx 配置文件黑名单中添加这个 IP 即可，如果只用 uWSGI，那么就需要在代码中修改了。另一方面，Nginx 是身经百战的 Web 服务器了，在表现上 uWSGI 显得更专业，比如说 uWSGI 在早期版本里是不支持 https 的，可以说 Nginx 更安全。<br/>Nginx 的特点是能够做负载均衡和 HTTP 缓存，如果不止一台服务器，Nginx 基本就是必选项了，通过 Nginx，将资源可以分配给不同的服务器节点，只有一台服务器，也能很好地提高性能，因为 Nginx 可以通过 headers 的Expires or E-Tag，gzip 压缩等方式很好地处理静态资源，毕竟是 C 语言写的，调用的是 native 的函数，针对 I/O做了优化，对于动态资源来说，Nginx 还可以实现缓存的功能，配合 CDN 优化（这是 uWSGI 做不到的）。Nginx 支持epoll/kqueue 等高效网络库，能够很好地处理高并发短连接请求，性能比 uWSGI 不知道高到哪里去了。<br/>如果服务器主机上运行了PHP，Python 等语言写的多个应用，都需要监听80端口，这时候 Nginx 就是必选项了。因为我们需要一个转发的服务。<br/>所以说，Nginx 基本也是必选项。<br/><br/></p><p><br/></p></pre><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></span><br/></p><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><br/></span></p><p style=\"margin-top: 5px;\"><span style=\"font-family: 微软雅黑, PTSans, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"></span><br/></p>',9,'2019-05-28 21:58:42.820507','2019-05-30 18:03:01.626716',2,1,1),(6,'纽约蹭饭手册：怎样利用Python在纽约吃霸王餐？','在家做饭不下馆子可以减少开支已经是公开的秘密。但作为一名美食天堂的国民，不下馆子几乎是不可能的。到处都是火锅店、烧烤餐厅或美味披萨店，瞅一眼这些美食，就足以摧毁大家省钱的意志力。\r\n如果你即不想让钱包当成受害者，又不想放弃美妙的用餐体验，就得自己“造”钱来支付饭费。','article_img/2019/05/28/175044816588.jpg','<h1 class=\"t-h1\" style=\"box-sizing: border-box; margin: 0px; font-size: 28px; font-family: Arial, 微软雅黑, &quot;Microsoft yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;冬青黑体简体中文 w3&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;冬青黑体简体中文 w3&quot;, STXihei, 华文细黑, SimSun, 宋体, Heiti, 黑体, sans-serif; font-weight: 500; line-height: 1.5; color: rgb(51, 51, 51); bottom: 22px; position: inherit; overflow-wrap: break-word; word-break: normal; white-space: normal; background-color: rgb(255, 255, 255);\">纽约蹭饭手册：怎样利用Python在纽约吃霸王餐？</h1><p><br/></p><p><img src=\"https://img.huxiucdn.com/article/cover/201905/28/175044816588.jpg?imageView2/1/w/710/h/400/|imageMogr2/strip/interlace/1/quality/85/format/jpg\" alt=\"纽约蹭饭手册：怎样利用Python在纽约吃霸王餐？\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: 710px; max-width: 100%; height: 400px; object-fit: cover;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">Photo by&nbsp;Pablo Merchán Montes&nbsp;on&nbsp;Unsplash，大数据文摘出品，编译：李雷、睡不着的iris、刘思佳、林安安、橡树_hiangsug、蒋宝尚</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在家做饭不下馆子可以减少开支已经是公开的秘密。但作为一名美食天堂的国民，不下馆子几乎是不可能的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">到处都是火锅店、烧烤餐厅或美味披萨店，瞅一眼这些美食，就足以摧毁大家省钱的意志力。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果你即不想让钱包当成受害者，又不想放弃美妙的用餐体验，就得自己“造”钱来支付饭费。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">来，跟随作者的脚步，让你走上了各种中餐、西餐、中西餐的蹭饭之路。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850537762.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"1080\" data-h=\"615\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">本文作者NBC环球的数据工程师Chris Buetti，2017年毕业于维克森林大学。<br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">首先我们的目标是到最棒的餐厅吃到霸王餐。这是个技术活，达成这个目标有两种方法：要么让代码做这件事，要么有大量的空闲时间。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">本文会简要介绍一下使用的技术和编程语言，但不会给出代码或相关内容。会解释怎样使用逻辑回归，随机森林，AWS和自动化脚本，但都不会深入。本文更多的是理论而非实践。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果你是一个非技术人，这篇文章仍然适合你，只不过要多花费一点时间和精力。文章里的这些方法大部分都很枯燥，这就是为什么我要用自动化脚本来实现它们的原因。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">走起，我将从结果开始，然后解释我是如何做到的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"大标题\" class=\"text-big-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 20px; font-weight: 700; color: rgb(164, 29, 29);\">我做了什么</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在今天这个数字时代，Instagram用户数是一种财富。像传闻说的那样可以通过大量的粉丝来赚钱，或者对我来说，用粉丝来支付我的饭费，这就是我所做的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我创建了Instagram个人首页，展示纽约的轮廓，标志性景点，优雅摩天大楼的图片，等等。这使我在纽约地区积累了超过25,000名粉丝，并且仍在快速增长。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850669338.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"418\" data-h=\"449\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我通过Instagram发消息或电子邮件联系当地的餐馆，用在主页上向粉丝发布评论来换取免费餐或至少是用餐折扣。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">几乎所有我联系的餐馆都给了我免费试吃的机会或优惠卡。大多数餐馆都有市场营销预算，所以他们很乐意为我提供免费的用餐体验，以便开展促销活动。有时优惠太多我只好送一些给朋友和家人。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">这本来没什么稀奇，关键在于我将整个过程自动化了，我的意思是100％不用手动操作了。我编写的代码可以自动找到图片或视频，制作标题，添加主题标签，标记图片或视频出自哪里，还能过滤垃圾邮件，发帖，关注用户和取消关注，点赞，监控我的收件箱，最重要的是自动向与可能需要促销的餐馆发消息和电子邮件。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">自从有了这套代码，我甚至都不需要真正登录该帐户，根本不用花时间在这上面。它本质上是一个机器人，但普通人无法分辨，因为它的行为和人一样。作为它的开发者，我可以坐下来欣赏它<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（和我的）</span>工作。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"大标题\" class=\"text-big-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 20px; font-weight: 700; color: rgb(164, 29, 29);\">我是怎么做到的</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我会带你从头到底了解我在这个过程中所做的每一件事。其中一些事看似常识，但当你用自动化系统来完成这些事的时候，细节就变得很重要。该过程可分为三个阶段：内容共享，黑客式增长以及销售和促销。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 18px; font-weight: 700; color: rgb(164, 29, 29);\">内容共享</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">其实，我的帐户所发布的内容都不是我原创的，而是我重新分享其他人的内容，但有注明来源。如果有人说我侵权，要我撤下他们的照片，我会马上照做。但因为我在分享里带了他们的主页的链接，所以他们从来都只有感激我。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">每天多次发布内容是必须的。这是Instagram算法确定你的曝光度的主要因素之一<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（通过“探索页面”）</span>。每天发帖，特别是在每天“高峰时段”发帖，非常单调乏味。大多数人做了几周就会放弃，甚至有时一两天漏发也会导致曝光度下降。因此，将内容收集和分享过程自动化是很有必要的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 18px; font-weight: 700; color: rgb(164, 29, 29);\">获取图片和视频</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我最初考虑用爬虫从Google图片或社交新闻站点Reddit上抓取图片。我遇到的最大的困难之一就是Instagram对所发布图片的大小有特别要求，最好是“方形”图片，也就是宽度等于高度，因此发布非正方形的图片会被拒绝。这使得检索图片变得非常艰巨。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我最终决定直接从其他Instagram帖子中搜索，因为图片大小符合要求，而且还可以准确知道其来源，这一点在自动化脚本里非常有用。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我收集了50个Instagram帐户，这些帐户发布了许多关于纽约的优质图片。我用开源软件编写了一个爬虫来下载这些帐户上传的帖子。除了下载文字内容外，还有图片和一堆元数据，如标题、点赞数和位置等。我将爬虫设置为每天凌晨3点或当我的图片库为空时运行。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">这样，我把所有内容都集中存储在一个地方，包含正确格式的各种内容。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 18px; font-weight: 700; color: rgb(164, 29, 29);\">自动确定什么是“好”或“坏”的内容</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">并非所有在Instagram上发布的内容都值得重新分享。有很多卖东西的帖子，骂人的贴子，或者有些内容跟我想要的不相关。以下面这两篇帖子为例：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850032065.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"614\" data-h=\"662\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">这两个帖子来自同一个纽约的Instagram帐户。左边帖子发布的是自然风光，我很乐意把它重新分享在我的主页。右边的广告没有任何上下文，标题分两行，这实际上是在给一个纽约的手机应用打广告。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果我把它放在我的主页上，那会就显得让人困扰，与我的主页显得格格不入。你可以看到点赞数量的差异-8200对1000。我需要脚本能够自动过滤掉右边的帖子，并重新分享左边的帖子。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">因此，我不能盲目地重新分享我提取到的所有内容。但我又希望这是一个自动化过程。所以我需要创建一个算法，可以取其精华去其糟粕。算法的第一部分包括一些hard-coded规则，第二部分是机器学习模型。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">算法的第一部分——hard-coded规则</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我做的第一件事是根据元数据中的特定规则优化我的inventory。在这个过程中，我必须保持严谨。如果出现了一个警告，那么图片就废了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">理论上，我可以抓取到很多内容，但如果算法在我的页面上发布了不合适的内容，那么在我发现之前可能已经有很多人看到了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">首先要做的是让我的算法查看标题。如果标题里包含与“点击链接”，“立即购买”，“限时抢购”等相关的任何文字，这类帖子将无法通过测试。很明显，这是广告，并不具有高质量内容。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我接下来要做的是看看评论是否不可用。我的经验是，不可用的评论大多与有争议的帖子有关，并不值得我冒这个风险。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我要做的最后一件事是看图片中是否标记了多个人。很多时候，图片中的一个标签是标记它来自哪里，这实际上是有用的。但是如果图片有多个标签，那么就会出现混淆。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">根据这些规则，我可以排除大部分垃圾帖子和不受欢迎的帖子。然而，不能仅仅依据是否推销东西来判断一篇帖子是否具有高质量内容。此外，我的hard-coded规则可能仍然会遗漏一些销售类的广告帖子，因此我想在完成第一部分后再过一个二级模型。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">第二部分——机器学习模型</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">经过第一部分算法过滤——hard-coded规则，我发现仍然存在一些垃圾帖子。我不打算人工手动剔除它们，我计划将这个过程完全自动化。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">每个帖子上都有大量的元数据，包括点赞数，标题，发布时间等等。我最初的目的是尝试预测哪些图片会获得最多的点赞。然而，很明显，网红博主自然会获得更多的点赞，所以这不能作为准确的判断依据。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">后来我的想法是让响应变量等同于点赞率<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（即点赞数/粉丝数）</span>，并尝试进行预测。但在观察每张图片及其点赞率后，我认为点赞率和图片质量的相关性不大。我不认为那些点赞率高的照片就是高质量照片。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">一些不知名的摄影师发布的图片内容并不一定比网红博主差，即便网红拥有更高点赞率。我决定用分类模型替换回归模型来评价图片内容的质量，判断其是否可以发布——一个简单的是或否问题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在查看其他元数据之前，我抓取了大量照片并把每张照片手工标记为0<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（差）</span>或1<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（好）</span>。这是非常主观的判断，可以说我是根据自己的主观判断制作模型。但我认为我的判断应该和大部分人一样。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我生成了数据集。响应变量为0或1<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（即差或好</span>），具有许多特征。每篇帖子的元数据可以提供我以下信息：</p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850814054.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"180\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">从这七个解释变量里，我改变了一些我认为有用的特征。例如，我改变了评论的数量和点赞率。我从标题中提取了带“#”号的标签的数量，并将其作为column，并对标题中提到的用户数量进行了相同的操作。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我对其余的标题进行向量化，用于后续的自然语言处理。向量化是删除外围词<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（如“the”，“and”）</span>，并将剩余词转换为可以用于数学分析的数字字段。我得到了以下数据：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850018799.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"260\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我使用了许多分类算法，例如支持向量机<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（Support Vector Machines）</span>和随机森林树<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（Random Forests）</span>，但最终是采用了简单的逻辑回归算法<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（Logistic Regression）</span>。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我认为有时候最简单的答案就是正确的答案。无论我采用哪种方式处理数据，逻辑回归算法在我的测试集上都表现最好。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">与其他分类算法不同，我可以在进行预测时设置阈值的得分<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（threshold score）</span>。分类算法通常输出二进制类<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（在我的算法里是0或1）</span>，但Logistic Regression实际上会输出0到1之间的小数。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">例如，它可能将帖子评为0.83或0.12。人们通常将阈值设置为0.5，并将所有大于0.5的定为1，其余的定为0，但这取决于具体使用的案例。这个过程很关键，所以我将我的阈值设为0.9，并低于该基准的内容视作无用的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在部署我的模型之后，图片和视频首先经过一套严格的规则清理，然后再经过Logistic Regression筛选出优秀的素材。现在我能够继续为每个帖子添加说明和打分。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 18px; font-weight: 700; color: rgb(164, 29, 29);\">自动化说明和打分</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我现在有一个自动收集相关内容并删除垃圾图像的系统——但我还没有完成。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果你之前用过Instagram，那么你应该知道每个帖子的图片或视频下方都有文字说明。但因为我实际上看不到这些图片，也没有时间给它们全部加上说明，所以我需要制作一个通用标题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我做的第一件事是制作最终模板。它看起来像这样：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850322542.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"200\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">接着我要将代码填进去。让我们一个个来看怎么填。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">标题</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我创建了一个文本文件，其中包含许多预定义的通用标题，可以匹配任何的图片。这些标题可以是关于纽约的名言、通用问题或是简单的赞美，例如：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850948863.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"113\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">对于每个帖子，标题是随机选择的。我有许多备选的标题，根本不用担心某个标题会频繁出现。对于我们的例子，我们可以选择 “Who can name this spot?”。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">来源标记</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">自动标记图片资源的来源可不是件容易的事情。通常情况下，一个Instagram账号页面上的图片并不代表这账号拥有图片的版权。这样的账号可能也是重新分享的内容，会在页面的标题中或图片标签里标记图片来源。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">对此，我决定无论如何先标注上图片的第一来源；如果我可以根据其他信息找出到图片的原始出处，那么我就继续在后面添加。通过这种方法，我基本上就可以标志出所有图片素材了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">首先我们看一下@likenewyorkcity的这个帖子，尽管是这个账号分享出了这张图片，但图片中的标签和页面标题上@geoffrey.parry才是图片的真正版权拥有者。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850158409.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"327\" data-h=\"720\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">理论上我希望我的代码可以在识别这张图片后得出这样一条输出：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850450018.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"539\" data-h=\"85\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">第一步很简单，我只需要直接标注出出现的账号即可，但第二步就没那么容易了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我通过REGEX<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（</span><span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">正则表达式工具）</span>匹配一些类似于“by”或者“photo”的关键词，然后找到紧跟在关键词后的“@”标识，通过这种方法抓取的用户名便被我标注成图片来源的第二部分。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果标题中没有出现这些关键词，我便检查是否有人为图片打了标签，这些打了标签的账号便被我“默认”为我该标注出的对象了。尽管这种简单粗暴的方法并不是那么完美，但至少比不这么“默认”强上好几倍，不失为一种值得尝试的方法。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我总是能精准地标注出图片的正确来源。实际上，人们还多次在我的图片下评论道“感谢分享！”<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（接下来展示出的图片便是一个很好的例子）</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">标签</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">Instagram允许用户为图片打上30个主题标签，图片便会在相应的主题下展示。于是我创建了一个包含100多个相关主题的文件：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850869703.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"64\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">刚开始我每次都会随机在其中选择30个主题，而且不久后，我可以根据实际结果比较出哪些主题标签会得到更多“赞”。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">模板填充</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">经过以上这三个步骤后，我便可以将采集到的信息填充到最后的模板中，为每一个帖子“量身定制”标题。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">下面是最终的产出成果：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">最后成功如下：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850001552.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"320\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我使用适合纽约市的任何图片的通用标题，标记了图片的Instagram帐户和原始来源，添加了三十个主题标签来提升帖子的曝光率。如果你继续查看帖子评论，你甚至还可以看到原始作者向我表示感谢。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850304853.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"326\" data-h=\"696\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">发布</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">现在我有一个集中管理的图片资源库，并可以使得每个帖子自动化生成标题，仅需最后的临门一脚——发布。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我在AWS上启动了一个EC2实例来托管我的代码，之所以选择这种方式是因为它比我的个人计算机更可靠——它始终保持联网状态，而且项目的工作量完全包含在AWS免费服务的条件限制之下。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我编写了一个Python脚本随机抓取其中一张图片，并在完成抓取和清理过程后自动生成标题。我设置了一个定时任务：每天早上8点，下午2点和晚上7:30调取我的API，完成所有的发布操作。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">此时，我已经完全自动化了内容查找和发布过程，我不再需要每天都找资源和发帖子运营我的账号了——程序为我完成了所有事情。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">涨粉</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">仅仅发布是不够的——我需要制定一些方法持续涨粉。由于我不会手动执行任何操作，因此这一步骤我也需要想办法自动化处理。我的想法是通过直接与受众的兴趣用户直接互动以增加账号的曝光率。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我写的交互脚本从美国东部时间上午10点到下午7点运行，在我看来这段时间是Instagram最活跃的时间范围。在这一天中，我的帐户有条不紊地关注，取关，并为相关的用户和照片点赞，以使他们以同样的方式与我互动。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 18px; font-weight: 700; color: rgb(164, 29, 29);\">关注（更加数据科学的方式）</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果你是Instagram用户，不管你是否意识得到，我敢肯定都被“卷”过这种增粉方法，尤其对于试图增加粉丝的用户来说非常有用。某天如果你在健身版块中关注一个有趣的Instagram页面，第二天你就会被一群健美运动员和健身模特所关注。尽管这种方法看起来非常微不足道，但它确实非常有效。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">需要注意的是你不能在Instagram上滥用这个方法关注其他账号。Instagram的算法有非常严格的限定，如果你在一天内操作过多或关注太多用户，他们会将你停止你的操作甚至封掉你的帐号。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">此外，你一天在Instagram上最多只可以被7500人关注；而且经过大量的测试，我发现你可以在一天内关注400人，取关400人。毕竟操作条件有限，每一次关注都非常宝贵，不能浪费在不太可能和你互粉的人身上。于是，我决定采集每次操作的元数据，基于此建立一个模型来预测某个人与你互粉的可能性，确保我的每一个关注操作都是有意义的。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我花了几分钟手动收集了20多个与我处在版块下的帐号。我没有初始数据，因此前几周我为增加我的关注量随机执行这些操作，但更重要的是我需要采集尽可能多的元数据，以便我可以建立我的预测模型。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我浏览了20多个相关帐户，关注了他们的粉丝，赞他们的照片或评论他们的帖子。在每次关注操作中，我都尽可能多地获取用户的元数据形成一个CSV文件，包含他们的关注者和粉丝的比例，他们是公开账号或私人账号，或者他们是否有个人资料图片等。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">每天，脚本都会自动扫描CSV文件并标记他们的反应，通过0,1,2进行顺序评级。如果两天内用户没有任何回应则标注为0，如果用户回粉但没有在最近的十张图片中发生任何互动行为则标注为1，2则是最理想的结果，表示他们回粉并在最近十个帖子中进行了互动。这样下来，我的数据集看起来便是这个样子的：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850375275.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"281\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">在将数据“喂”进ML模型前，我通过探索性数据分析得出以下结论：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px 0px 0px 15px;\"><li><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">虽然点赞党和评论党较关注党回粉我的可能性小，但他们更喜欢与我互动。这说明尽管他们无法直观地带来关注量的增加，但他们可以提升我账号的质量。</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px 0px 0px 15px;\"><li><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">早上关注用户比晚上关注用户的回粉效果好。</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px 0px 0px 15px;\"><li><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">公开的账号较私密账号更愿与我互粉。</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px 0px 0px 15px;\"><li><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">女性较男性更愿意回粉我的账号。</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px 0px 0px 15px;\"><li><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">关注用户数大于粉丝数的用户<span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">（关注与粉丝的比例大于1.0）</span>更愿意与我互粉。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">从上面的洞察，我优化了最初对搜索用户的方式。我调整了我的设置，只在早上去关注，主要寻找女性用户。现在，我终于能够建立一个机器学习模型，在与用户交互之前，根据用户的元数据预测是否会关注我，这样就不会浪费我每天能够关注的用户额度，去关注一个不会跟我互粉的人。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">接下来，我选择使用随机森林算法对后续的结果进行分类。最初，我并没有设置结构或结果变量，而是使用了许多不同的决策树，因为我想得到它们的可视流程图。随机森林是决策树的增强，纠正单个树中存在的不一致性。在对我的训练数据进行建模后，测试数据上的精度一直超过80%，所以这对我来说是一个非常有效的模型。进一步，将模型应用于抓取的用户的代码，优化了关注算法，我的关注人数开始蹭蹭的往上涨。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">取关</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">两天后，我就不会再继续关注我之前关注的人，两天已经足够让我确定他们是否会回粉。这样我能关注更多的人、收集更多的数据，并持续涨粉。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">为什么我要对他们取关呢？有两个原因：第一，我的关注人数的额度上限为7500人；第二，每个人肯定都希望提高被关注/关注的比率，这样才能体现自己特别受欢迎，特别吸引人。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">这是一项简单的任务，因为你不需要做出任何决定。你某一天关注了400个人，两天后你把这些人取关就行了。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">点赞</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">点赞也可以提高关注人数。但是我没有投入太多的精力去选择一些大家都喜欢并且会去点赞的图片贴在我的账户中，因为对比以上其他方法，这个效果并不那么明显。所以，我只是提供了一组预定义的主题标签，通过主题关联，用户的连锁点击，收获一些关注者。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span label=\"小标题\" class=\"text-sm-title\" style=\"box-sizing: border-box; font-weight: 700; font-size: 18px; color: rgb(164, 29, 29);\">自动推销</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">至此，我有一个特别智能的Instagram机器人。我的NYC主页会寻找与它相关的内容，淘汰不良的潜在帖子，吸引用户群，并全天发帖。此外，从上午7:00 到下午 10:00，它通过分析点赞、关注和不关注的受众人群来修改自身的设置，并且通过一些算法来优化受众人群的定义。最棒的是，它的分析与操作更加人性化，与Instagram真实用户相似。<br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">有一两个月，我能明显看到关注人数的增长。每天我的账户中都会多100到500名的新关注者，一起欣赏我所爱的城市的美丽图像。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我可以开始享受我的生活，认真的工作，和朋友出去吃饭、看电影，并不需要花费时间去手动发帖。当我忙于自己的事时，它能完全托管我的账户。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">当我拥有了20000个追随者的时候，我决定是时候靠它来蹭吃蹭喝了，所以我需要它自动推销我的产品。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我做了一个通用的消息模板，无论是餐馆、剧院、博物馆还是商店，这个模板都能适用。下面就是我绞尽脑汁想出来了的：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850008383.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"554\" data-h=\"391\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">现在，我只需要记录账户名称和消息发送时我的关注者数量。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我的目标是找到商业用户并像他们推销我的产品。商业用户资料与普通用户资料略有不同—商业用户可以在其网页上添加电子邮件、电话号码、地址等其他详细资料。但最重要的是，他们的资料中都有一个类别标签。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850532637.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"361\" data-h=\"305\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">上面那张图中是一个商业用户的示例。在左上角的名称下方，显示出它是一个韩国餐厅，同时顶部设有电话呼入、电子邮件和地址等提示信息。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我写了一个Python脚本来查找这类页面并且让我的帐户能够自动向它们发送消息。该脚本采用两个参数，一个初始主题标签和一个要在类别标签中查找的字符串。这里，我使用标签“Manhattan”和字符串“restaurant”来举例说明。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">这个脚本的作用是去提取主题标签并加载照片，然后遍历这些帖子，直到找到在照片中标记用户的帖子。如果找了到，它会检查其标签，确认它是否是商业用户。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果是，就查看该用户类别。如果类别包含“餐馆”一词，则会向他们发送我的信息。商业用户一般都会在他们的页面上留下他们的电子邮件，所以可以向他们自动发送电子邮件，在后台跟进我的Instagram消息即可。在搜索过程中，我可以随时将标签更改为#TimesSquare，也可以将目标字符串更改为“博物馆”等，我想搜索什么都行。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850031077.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"632\" data-h=\"24\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850044025.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"710\" data-h=\"158\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">当我登录进入账户后，我会看到它自动生成和发送的消息。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850005004.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"352\" data-h=\"731\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">如果我去我的Gmail发件箱, 我就会看到以下邮件：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850523881.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"361\" data-h=\"719\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我还有一个脚本, 用来监测我的收件箱中的任何回复，同时提醒我。如果我收到回复邮件，我就会联系我的潜在客户。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">以上这些操作，都是脚本自动运行的, 并不需要任何人工操作。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">我终于实现了蹭吃蹭喝～</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">最终效果比我之前想象的还要好，我利用Instagram推广换取了很多餐厅的礼品卡以及免费餐。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850122650.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"457\" data-h=\"166\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850265520.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"789\" data-h=\"381\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p class=\"img-center-box\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; text-align: center;\"><img src=\"https://img.huxiucdn.com/article/content/201905/28/154850631851.jpg?imageView2/2/w/1000/format/jpg/interlace/1/q/85\" data-w=\"537\" data-h=\"297\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; width: auto; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">借助人工智能、自动化脚本和数据科学的力量，在代码脚本自动运转时，我可以高枕无忧。它是一个特别尽责的推销员，让我能够有自己的时间享受生活。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\">最后，如果你也有利用编程和自动化脚本做了相关项目的经验，比如在北京吃上了霸王餐，欢迎投稿给我们～</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;\"><span class=\"text-remarks\" label=\"备注\" style=\"box-sizing: border-box; color: rgb(153, 153, 153); line-height: 30px;\">相关报道：https://medium.com/@chrisbuetti/how-i-eat-for-free-in-nyc-using-python-automation-artificial-intelligence-and-instagram-a5ed8a1e2a10</span></p><p><span class=\"c2\" style=\"box-sizing: border-box; color: rgb(144, 144, 144);\">*文章为作者独立观点，不代表虎嗅网立场<br style=\"box-sizing: border-box;\"/></span><span style=\"box-sizing: border-box;\">本文由&nbsp;<a href=\"https://www.huxiu.com/member/1311136.html\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(48, 48, 48); text-decoration-line: none; cursor: pointer;\">大数据文摘</a>&nbsp;授权&nbsp;<a href=\"https://www.huxiu.com/\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(48, 48, 48); text-decoration-line: none; cursor: pointer;\">虎嗅网</a>&nbsp;发表，并经虎嗅网编辑。转载此文请于文首标明作者姓名，保持文章完整性（包括虎嗅注及其余作者身份信息），并请附上出处（虎嗅网）及本页链接。原文链接：https://www.huxiu.com/article/301506.html&nbsp;</span><br style=\"box-sizing: border-box;\"/><span style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-weight: 700;\">未按照规范转载者，虎嗅保留追究相应责任的权利</span></span></p><p><br/></p>',11,'2019-05-28 22:01:06.847957','2019-05-31 18:51:25.266856',3,1,1),(7,'SQL行转列经典例子','SQL行转列经典例子...','article_img/2019/05/29/u30451879603451591284fm26gp0.jpg','<p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\"><br/></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\">1、行转列</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\">---1、最简单的行转列<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/><br/></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\">问题：假设有张学生成绩表(tb)如下:<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>姓名 课程 分数<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>张三 语文 74<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>张三 数学 83<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>张三 物理 93<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>李四 语文 74<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>李四 数学 84<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>李四 物理 94</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\"><span style=\"color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; background-color: rgb(255, 255, 255);\">想变成(得到如下结果)：&nbsp;</span><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; background-color: rgb(255, 255, 255);\">姓名 语文 数学 物理&nbsp;</span><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; background-color: rgb(255, 255, 255);\">李四 74&nbsp;&nbsp; 84&nbsp;&nbsp; 94</span><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(79, 79, 79); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; background-color: rgb(255, 255, 255);\">张三 74&nbsp;&nbsp; 83&nbsp;&nbsp; 93</span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"></p><p>#&nbsp;&nbsp;&nbsp;&nbsp;添加数据</p><p>create table tb(name varchar(10),subject varchar(10),score int);</p><p>insert into tb values(&#39;张三&#39;,&#39;语文&#39;,74);</p><p>insert into tb values(&#39;张三&#39;,&#39;数学&#39;,83);</p><p>insert into tb values(&#39;张三&#39;,&#39;物理&#39;,93);</p><p>insert into tb values(&#39;李四&#39;,&#39;语文&#39;,74);</p><p>insert into tb values(&#39;李四&#39;,&#39;数学&#39;,84);</p><p>insert into tb values(&#39;李四&#39;,&#39;物理&#39;,94);</p><p><br/></p><p>#使用case when （SQL2000以上）</p><p>select name,</p><p>max(case subject when &#39;语文&#39; then score else 0 end)语文,</p><p>max(case subject&nbsp;when &#39;数学&#39;then score&nbsp;else 0 end)数学,</p><p>max(case subject&nbsp;when &#39;物理&#39;then score&nbsp;else 0 end)物理</p><p>from tb</p><p>group by name;</p><p>&nbsp;</p><p><br/></p><p><br/></p><p><br/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\"><br/></span></p><p><br/></p>',5,'2019-05-29 16:32:40.979515','2019-06-02 20:19:39.271696',2,2,1),(8,'MySQL命令大全','mysql命令大全，不建议新手阅读！','article_img/2019/05/29/u30451879603451591284fm26gp0_vECxOCj.jpg','<p>mysql基础参考：<a href=\"https://www.cnblogs.com/programmer-tlh/p/5782418.html\" _src=\"https://www.cnblogs.com/programmer-tlh/p/5782418.html\">https://www.cnblogs.com/programmer-tlh/p/5782418.html</a> </p><p><br/></p><p>一、基本命令</p><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1、启动服务</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 说明：以管理员身份运行cmd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 格式：net start 服务名称</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 示例：net start mysq</p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;2、停止服务</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 说明：以管理员身份运行cmd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 格式：net stop 服务名称</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 示例：net stop mysq</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;3、连接数据</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 格式：mysql -u 用户名 -p</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 示例：mysql -u root -p</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 输入密码(安装时设置的)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;4、退出登录(断开连接)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; quit或exit</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;5、查看版本（连接后可以执行）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 示例：select version();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;6、显示当前时间（连接后可以执行）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 示例：select now();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;7、远程连接</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 格式：mysql -h ip地址 -u 用户名 -p</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 输入对方mysql密码</p><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>二、数据库操作</p><p>&nbsp; &nbsp; 1、创建数据库</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：create database 数据库名 charset=utf8;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：create database grade charset=utf8;</p><p>&nbsp; &nbsp; 2、删除数据库</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：drop database 数据库名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：drop database grade;</p><p>&nbsp; &nbsp; 3、切换数据库</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：use 数据库名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：use grade;</p><p>&nbsp; &nbsp; 4、查看当前选择的数据库</p><p>&nbsp; &nbsp; &nbsp; &nbsp; select database();</p><p><br/></p><p>三、表操作</p><p>&nbsp; &nbsp; 1、查看当前数据库中所有表</p><p>&nbsp; &nbsp; &nbsp; &nbsp; show tables;</p><p>&nbsp; &nbsp; 2、创建表</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：create table 表名(列及类型);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 说明：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; auto_increment表示自增长&nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; primary key表示主键&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; not null表示不为空</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：create table student(id int auto_increment primary key, name varchar(20) not null, age int not null, gender bit default 1, address varchar(20), isDelete bit default 0);</p><p>&nbsp; &nbsp; 3、删除表</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：drop table 表名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：drop table student;</p><p>&nbsp; &nbsp; 4、查看表结构</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：desc 表名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：desc student;</p><p>&nbsp; &nbsp; 5、查看建表语句</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：show create table 表名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：show create table student;</p><p>&nbsp; &nbsp; 6、重命名表名</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：rename table 原表名 to 新表名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：rename table car to newCar;</p><p>&nbsp; &nbsp; 7、修改表</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：alter table 表名 add|change|drop 列名 类型;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：alter table newcar add isDelete bit default 0</p><p><br/></p><p>四、数据操作</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1、增</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;a、全列插入</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;格式：insert into 表名 values(...);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;说明：主键列是自动增长，但是在全列插入时需要占位，通常使用0，插入成功以后以实际数据为准</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;示例：insert into student values(0,&quot;tom&quot;,19,1,&quot;北京&quot;,0);</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;b、缺省插入</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;格式：insert into 表名(列1,列2,……) values(值1,值2,……);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;示例：insert into student(name,age,address) values(&quot;lilei&quot;,19,&quot;上海&quot;);</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;c、同时插入多条数据</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;格式：insert into 表名 values(...),(...),……</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;示例：insert into student values(0,&quot;hanmeimei&quot;,18,0,&quot;北京&quot;,0),(0,&quot;poi&quot;,22,1,&quot;海南&quot;,0),(0,&quot;wenli&quot;,20,0,&quot;石家庄&quot;,0);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2、删</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;格式：delete from 表名 where 条件;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;示例：delete from student where id=4;</p><p>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注意：没有条件是全部删除，慎用</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3、改</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;格式：update 表名 set 列1=值1,列2=值2,…… where 条件;</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;示例：update student set age=16 where id=7;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;注意：没有条件是全部列都修改，慎用</p><p>&nbsp;&nbsp;&nbsp;&nbsp;4、查</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;说明：查询表中的全部数据</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;格式：select * from 表名;</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;示例：select * from student;</p><p><br/></p><p><br/></p><p>五、查</p><p>&nbsp; &nbsp; 1、基本语法</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 格式：select * from 表名;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 说明：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a、from关键字后面是表名，表示数据来源于这张表</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; b、select后面写表中的列名，如果是*表示在结果集中显示表中的所有列</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c、在select后面的列名部分，可以使用as为烈面起别名，这个别名显示在结果集中</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d、如果要查询多个列，之间使用逗号分隔</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select name, age from student;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select name as a, age from student;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; 2、消除重复行</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 在select后面列前面使用distinct可以消除重复的行</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select gender from student;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select distinct gender from student;</p><p>&nbsp; &nbsp; 3、条件查询</p><p>&nbsp; &nbsp; &nbsp; &nbsp; a、语法</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from 表名 where 条件</p><p>&nbsp; &nbsp; &nbsp; &nbsp; b、比较运算符</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 等于&nbsp; &nbsp; &nbsp; &nbsp; =</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 大于&nbsp; &nbsp; &nbsp; &nbsp; &gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 小于&nbsp; &nbsp; &nbsp; &nbsp; &lt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 大于等于&nbsp; &nbsp; &gt;=</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 小于等于&nbsp; &nbsp; &lt;=</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 不等于&nbsp; &nbsp; &nbsp; !=或&lt;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询id值大于8的所有数据</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：select * from student where id&gt;8;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; c、逻辑运算符</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and&nbsp; &nbsp; 并且</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or&nbsp; &nbsp; &nbsp;或者</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; not&nbsp; &nbsp; 非</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询id值大于7的女同学</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：select * from student where id&gt;7 and gender=0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; d、模糊查询</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; insert into student values(0,&quot;习近平&quot;,65,1,&quot;北京&quot;,0);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; insert into student values(0,&quot;习大&quot;,66,1,&quot;北京&quot;,0);</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; like</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; %表示任意多个任意字符</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _表示一个任意字符</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询姓习的同学</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student where name like &quot;习%&quot;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student where name like &quot;习_&quot;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; e、范围查询</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; in&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 表示在一个非连续的范围内</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; between...and...&nbsp; 表示在一个连续的范围内</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询编号为8、10、12的学生</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：select * from student where id in (8,10,12);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询编号为6到8的学生</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：select * from student where id between 6 and 8;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; f、空判断</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; insert into student(name,age) values(&quot;特朗普&quot;,70);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 注意：null与&quot;&quot;是不同</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 判断空：is null</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 判断非空： is not null</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询没有地址的同学</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：select * from student where address is null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需求：查询有地址的同学</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 示例：select * from student where address is not null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; g、优先级</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 小括号，not 比较运算符，逻辑运算符</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and比or优先级高，如果同时出现并希望先选or,需要结合()来使用</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4、聚合</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 为了快速等到统计数据，提供了5个聚合函数</p><p>&nbsp; &nbsp; &nbsp; &nbsp; a、count(*)&nbsp; &nbsp; 表示计算总行数，括号中可以写*和列名</p><p>&nbsp; &nbsp; &nbsp; &nbsp; b、max(列)&nbsp; &nbsp; &nbsp;表示求此列的最大值</p><p>&nbsp; &nbsp; &nbsp; &nbsp; c、min(列)&nbsp; &nbsp; &nbsp;表示求此列的最小值</p><p>&nbsp; &nbsp; &nbsp; &nbsp; d、sum(列)&nbsp; &nbsp; &nbsp;表示求此列的和</p><p>&nbsp; &nbsp; &nbsp; &nbsp; e、avg(列)&nbsp; &nbsp; &nbsp;表示求此列的平均值</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：查询学生总数</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：select count(*) from student;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：查询女生的编号最大值</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：select max(id) from student where gender=0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：查询女生的编号最小值</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：select min(id) from student where gender=0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：查询所有学生的年龄和</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：select sum(age) from student;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：查询所有学生的年龄平均值</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：select avg(age) from student;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; 5、分组</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 按照字段分组，表示此字段相同的数据会被放到一个集合中。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 分组后，只能查询出相同的数据列，对于有差异的数据列无法显示在结果集中</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 可以对分组后的数据进行统计，做聚合运算</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 语法：select 列1,列2,聚合…… from 表名 group by 列1,列2,列3,……;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：查询男女生总数</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select gender,count(*) from student group by gender;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select name,gender,count(*) from student group by gender,age;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 分组后的数据筛选：select 列1,列2,聚合…… from 表名 group by 列1,列2,列3,…… having 列1,……聚合……;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：select gender,count(*) from student group by gender having gender;</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; where与having的区别：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; where是对from后面指定的表进行筛选，属于对原始数据的筛选</p><p>&nbsp; &nbsp; &nbsp; &nbsp; having是对group by的结果进行筛选</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; 6、排序</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 语法：select * from 表名 order by 列1 asc|desc，列2 asc|desc , ……;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 说明：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a、将数据按照列1进行排序，如果某些列1的值相同，则按照列2进行排序</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; b、默认按照从小到大的顺序排序</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c、asc升序</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d、desc降序</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 需求：将没有被删除的数据按年龄排序</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student where isDelete=0 order by age desc;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student where isDelete=0 order by age desc, id desc;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; 7、分页</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 语法：select * from 表名 limit start,count;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 说明：start索引从0开始</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 示例：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student limit 0,3;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student limit 3,3;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select * from student where gender=1 limit 0,3;</p><p><br/></p><p>六、关联</p><p>&nbsp; &nbsp; 建表语句：</p><p>&nbsp; &nbsp; 1、create table class(id int auto_increment primary key, name varchar(20) not null, stuNum int not null);</p><p>&nbsp; &nbsp; 2、create table students(id int auto_increment primary key, name varchar(20) not null, gender bit default 1, classid int not null, foreign key(classid) references class(id));</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; 插入一些数据：</p><p>&nbsp; &nbsp; insert into class values(0, &quot;python01&quot;, 55),(0, &quot;python02&quot;, 50),(0, &quot;python03&quot;, 60),(0, &quot;python04&quot;, 80);</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; insert into students values(0, &quot;tom&quot;, 1, 1);</p><p>&nbsp; &nbsp; insert into students values(0, &quot;lilei&quot;, 1, 10);</p><p>&nbsp; &nbsp; insert into students values(0, &quot;jack&quot;, 1, 2);</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; select * from students;</p><p>&nbsp; &nbsp; 关联查询：</p><p>&nbsp; &nbsp; select students.name,class.name from class inner join students on class.id=students.classid;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; select students.name,class.name from class left join students on class.id=students.classid;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; select students.name,class.name from class right join students on class.id=students.classid;</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; 分类：</p><p>&nbsp; &nbsp; 1、表A inner join 表B：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 表A与表B匹配的行会出现在结果集中</p><p>&nbsp; &nbsp; 2、表A left join 表B：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 表A与表B匹配的行会出现在结果集中，外加表A中独有的数据，未对应的数据使用null填充</p><p>&nbsp; &nbsp; 3、表A right join 表B：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 表A与表B匹配的行会出现在结果集中，外加表B中独有的数据，未对应的数据使用null填充</p><p><br/></p><p><br/></p>',6,'2019-05-29 20:12:08.505694','2019-06-04 14:15:46.690017',2,2,1),(9,'Django自带admin不够美观试试xadmin','xadmin简单使用','article_img/2019/05/31/3CE9_3R10IJHJP5PXX3U.png','<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word !important;\">一般来说，一个完整的后台系统具有以下特点：</p><ul style=\"box-sizing: border-box; margin-top: -5px; margin-bottom: 20px; margin-left: 20px; padding: 0px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word !important;\" class=\" list-paddingleft-2\"><li><p>具有权限管理功能</p></li><li><p>少前端样式</p></li><li><p>快速开发</p></li></ul><p><br/></p><h3 style=\"box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 22px; text-rendering: optimizelegibility; white-space: normal; background-color: rgb(255, 255, 255);\">Django自带的admin：</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word !important;\">Django本身是自带后台管理系统的，不过个人感觉不太好看</p><p><br/></p><h4 style=\"box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 20px; text-rendering: optimizelegibility; white-space: normal; background-color: rgb(255, 255, 255);\">将settings的语言时区设为中文和上海:</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/media/upimg/image_20190531201542_212.png\" title=\"\" alt=\"image.png\"/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;LANGUAGE_CODE &nbsp;&nbsp;&nbsp;&nbsp;语言中文，TIEM_ZONE&nbsp;&nbsp;&nbsp;&nbsp;时区上海<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;USE_TZ 设定使用本地时间，如果为true会使用国际时间，如果网站涉及到时间运算的话 需要修改为False<br/></p><p><br/></p><h3 style=\"box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 22px; text-rendering: optimizelegibility; white-space: normal; background-color: rgb(255, 255, 255);\">安装xadmin</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;两种方法：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、pip安装（不推荐，会出现各种报错，不稳定）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pip install xadmin<br/></p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、源码安装<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以去百度或者GitHub搜索xadmin源码，也可以在下面的链接进行下载，其中需要注意的是xadmin对django有版本兼容的，django1.x和django2.x都需要下载相对应的xadmin。还有去我的百度网盘下载xadmin的话，后面只需要把xadmin-django2.x文件夹中的xadmin复制到你的项目中就可以了<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;链接：https://pan.baidu.com/s/14IoOy10Aeq3nacFSL7nekA&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提取码：71nm&nbsp;</p><p><br/></p><p>&nbsp; &nbsp;&nbsp;<br/></p><p><span style=\"color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 22px; font-weight: 700; background-color: rgb(255, 255, 255);\">简单使用</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在setting文件中配置<span style=\"color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);\">installed_apps</span></p><p><span style=\"color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/media/upimg/image_20190531203233_871.png\" title=\"\" alt=\"image.png\"/></span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;注意：这里需要安装一个依赖包，并且将crispy_forms配置到setting文件中的INSTALLED_APPS中<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(171, 178, 191); font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: pre; background-color: rgb(40, 44, 52);\">pip inistall django-crispy-forms</span></p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;urls文件中配置xadmin路由<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><pre>import&nbsp;xadmin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\nurlpatterns&nbsp;=&nbsp;[path(&#39;admin/&#39;,&nbsp;xadmin.site.urls),]</pre><p>&nbsp; &nbsp;&nbsp;<br/></p><p><br/></p><h4 style=\"box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 20px; text-rendering: optimizelegibility; white-space: normal; background-color: rgb(255, 255, 255);\">注册xadmin：</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word !important;\">&nbsp;&nbsp;&nbsp;&nbsp;其实和Django自身的admin注册很类似：</p><ol style=\"box-sizing: border-box; margin-top: -5px; margin-bottom: 20px; margin-left: 20px; padding: 0px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word !important;\" class=\" list-paddingleft-2\"><li><p>先在app目录下新建一个adminx.py文件（xadmin会自动搜索每个app下面的adminx.py文件，然后根据这些文件来注册）</p></li><li><p>编辑此文件，以邮箱验证码的model为例:</p><p><br/></p><p><br/></p></li></ol><pre class=\"hljs python\" style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; overflow-wrap: normal; color: rgb(171, 178, 191); background-color: rgb(40, 44, 52); border: 1px solid rgb(204, 204, 204); border-radius: 4px; word-break: break-word !important;\">import&nbsp;xadmin\r\nfrom&nbsp;.models&nbsp;import&nbsp;EmailVerifyRecord\r\n\r\nclass&nbsp;EmailVerifyRecordAdmin(object):\r\n&nbsp;&nbsp;&nbsp;&nbsp;list_display&nbsp;=&nbsp;[&#39;code&#39;,&#39;email&#39;,&#39;send_time&#39;]\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\nxadmin.site.register(EmailVerifyRecord,&nbsp;EmailVerifyRecordAdmin)</pre><p><br/></p><p>这样的话基本上xadmin就注册完毕了。配置完成后，生成迁移文件和执行迁移文件，然后创建一个超级用户，就可以登录xadmin后台了</p><pre style=\"background-color:#2b2b2b;color:#a9b7c6;font-family:&#39;宋体&#39;;font-size:13.5pt;\">python&nbsp;manage.py&nbsp;makemigrations&nbsp;&nbsp;#&nbsp;&nbsp;&nbsp;&nbsp;生成迁移\r\npython&nbsp;manage.py&nbsp;migrate&nbsp;&nbsp;#&nbsp;&nbsp;&nbsp;&nbsp;执行迁移\r\npython&nbsp;manage.py&nbsp;createsuperuser&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;&nbsp;&nbsp;创建超级用户</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp; &nbsp;<br/></p><p>DjangoUeditor的安装与配置：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.安装DjangoUeditor，要分清楚 python2和python3 版本问题</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;方法一：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以通过百度和github下载源码：<span style=\"color: rgb(204, 204, 204); font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: pre; background-color: rgb(45, 45, 45);\"></span><a href=\"https://github.com/twz915/DjangoUeditor3\" rel=\"nofollow\" target=\"_blank\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(103, 149, 181); text-decoration-line: none; cursor: pointer; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">https://github.com/twz915/DjangoUeditor3</a><span style=\"background-color: rgb(45, 45, 45); color: rgb(204, 204, 204); font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: pre;\"></span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接将DjangoUeditor文件夹复制到项目中就可以</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;方法二：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;简单方便<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pip&nbsp; &nbsp;install&nbsp;&nbsp;DjangoUeditor</p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.在setting文件的INSTALLED_APPS添加DjangoUeditor应用：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INSTALLED_APPS = (</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;#........\r\n &nbsp; &nbsp; &nbsp; &nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;DjangoUeditor&#39;,\r\n &nbsp; &nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<span style=\"color: rgb(204, 204, 204); font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: pre; background-color: rgb(45, 45, 45);\"></span></p><p><br/></p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.配置urls文件<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><pre>from&nbsp;django.views.static&nbsp;import&nbsp;serve\r\nfrom&nbsp;django.conf&nbsp;import&nbsp;settings</pre><pre>#&nbsp;&nbsp;富文本路由\r\npath(&#39;ueditor/&#39;,&nbsp;include(&#39;DjangoUeditor.urls&#39;)),\r\n#&nbsp;&nbsp;富文本上传图片显示图片\r\nre_path(r&#39;^media/(?P&lt;path&gt;.*)$&#39;,&nbsp;serve,&nbsp;{&#39;document_root&#39;:&nbsp;settings.MEDIA_ROOT}),</pre><p><br/></p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.在adminx文件中的需要使用富文本的类中：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body为模型类字段</p><pre style=\"background-color:#2b2b2b;color:#a9b7c6;font-family:&#39;宋体&#39;;font-size:13.5pt;\">style_fields&nbsp;=&nbsp;{&quot;body&quot;:&quot;ueditor&quot;}</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;6.配置xadmin<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在xadmin/plugins目录下新建ueditor.py<br/></p><pre>import&nbsp;xadmin\r\nfrom&nbsp;xadmin.views&nbsp;import&nbsp;BaseAdminPlugin,&nbsp;CreateAdminView,&nbsp;ModelFormAdminView,&nbsp;UpdateAdminView\r\nfrom&nbsp;DjangoUeditor.models&nbsp;import&nbsp;UEditorField\r\nfrom&nbsp;DjangoUeditor.widgets&nbsp;import&nbsp;UEditorWidget\r\nfrom&nbsp;django.conf&nbsp;import&nbsp;settings\r\n\r\nclass&nbsp;XadminUEditorWidget(UEditorWidget):\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,**kwargs):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.ueditor_options=kwargs\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.Media.js&nbsp;=&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(XadminUEditorWidget,self).__init__(kwargs)\r\n\r\nclass&nbsp;UeditorPlugin(BaseAdminPlugin):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;get_field_style(self,&nbsp;attrs,&nbsp;db_field,&nbsp;style,&nbsp;**kwargs):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;style&nbsp;==&nbsp;&#39;ueditor&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;isinstance(db_field,&nbsp;UEditorField):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget&nbsp;=&nbsp;db_field.formfield().widget\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param&nbsp;=&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.update(widget.ueditor_settings)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.update(widget.attrs)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{&#39;widget&#39;:&nbsp;XadminUEditorWidget(**param)}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;attrs\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;block_extrahead(self,&nbsp;context,&nbsp;nodes):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js&nbsp;=&nbsp;&#39;&lt;script&nbsp;type=&quot;text/javascript&quot;&nbsp;src=&quot;%s&quot;&gt;&lt;/script&gt;&#39;&nbsp;%&nbsp;(settings.STATIC_URL&nbsp;+&nbsp;&quot;ueditor/ueditor.config.js&quot;)&nbsp;&nbsp;#&nbsp;自己的静态目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js&nbsp;+=&nbsp;&#39;&lt;script&nbsp;type=&quot;text/javascript&quot;&nbsp;src=&quot;%s&quot;&gt;&lt;/script&gt;&#39;&nbsp;%&nbsp;(settings.STATIC_URL&nbsp;+&nbsp;&quot;ueditor/ueditor.all.js&quot;)&nbsp;&nbsp;#&nbsp;自己的静态目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodes.append(js)\r\n\r\nxadmin.site.register_plugin(UeditorPlugin,&nbsp;UpdateAdminView)\r\nxadmin.site.register_plugin(UeditorPlugin,&nbsp;CreateAdminView)</pre><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;并在xadmin/plugins目录下的__init__.py文件中</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PLUGINS = （</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;....</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ueditor</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;7.将models文件中的body字段修改为UEditor<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><pre>from&nbsp;DjangoUeditor.models&nbsp;import&nbsp;UEditorField\r\n\r\nbody&nbsp;&nbsp;=&nbsp;UEditorField(&#39;内容&#39;,width=800,height=500,toolbars=&quot;full&quot;,&nbsp;imagePath=&quot;upimg/&quot;,\r\n&nbsp;filePath=&quot;upfile/&quot;,upload_settings={&quot;imageMaxSize&quot;:&nbsp;1204000},settings={},&nbsp;\r\n&nbsp;command=None,&nbsp;blank=True)</pre><p><br/></p><p><br/></p><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-size: 20px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">将djangoueditor下的static文件复制到应用下的static，启动即可使用</h4><p><br/></p>',12,'2019-05-31 20:42:22.746657','2019-06-04 21:28:43.239191',1,1,1),(10,'django2.1全文检索haystack+whoosh+jieba','全文检索是指计算机索引程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置，当用户查询时，检索程序就根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。','article_img/2019/06/03/HAIUGJG1_5F7XI0WJ5A8F.png','<p>全文检索是什么？<br/></p><p><strong><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全文检索是指计算机索引程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置，当用户查询时，检索程序就根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。</span></strong></p><p><strong><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\"><br/></span></strong></p><p><strong><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\">全⽂文检索⼤大体分两个过程，索引创建(Indexing)和搜索索引(Search)。</span></span></strong></p><p><strong><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\"></span></strong></p><ul style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; margin-bottom: 0.85em; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>索引创建：将现实世界中所有的数据提取信息，创建索引的过程。</p></li><li><p>搜索索引：就是得到⽤用户的查询请求，搜索创建的索引，然后返回结果的过程。</p><p><br/></p></li></ul><p><br/></p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">安装所需要的包:</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">pip&nbsp;install&nbsp;django-haystack\r\npip&nbsp;install&nbsp;whoosh\r\npip&nbsp;install&nbsp;jieba</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\"><br/></p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">haystack：全文检索的框架，支持whoosh、solr、Xapian、Elasticsearc四种全文检索引擎.</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">whoosh：纯Python编写的全文搜索引擎，虽然性能比不上sphinx、xapian、Elasticsearc等，但是无二进制包，程序不会莫名其妙的崩溃，对于小型的站点，whoosh已经足够使用，点击查看whoosh文档</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">jieba：一款免费的中文分词包，如果觉得不好用可以使用一些收费产品.</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\"><br/></p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">全部安装完成后，在项目中的setting.py中的INSTALLED_APPS添加<span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3;\">haystack：</span></p><p><br/></p>INSTALLED_APPS = (<br/> &nbsp; &nbsp;...<br/> &nbsp; &nbsp;&#39;haystack&#39;,<br/><p>)</p><p><br/></p><p>在setting文件的任意位置添加全文检索的引擎配置：</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">HAYSTACK_CONNECTIONS&nbsp;=&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;default&#39;:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#使用whoosh引擎\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;ENGINE&#39;:&nbsp;&#39;haystack.backends.whoosh_cn_backend.WhooshEngine&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#索引文件路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;PATH&#39;:&nbsp;os.path.join(BASE_DIR,&nbsp;&#39;whoosh_index&#39;),\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n#当添加、修改、删除数据时，自动生成索引\r\nHAYSTACK_SIGNAL_PROCESSOR&nbsp;=&nbsp;&#39;haystack.signals.RealtimeSignalProcessor&#39;</pre><p><br/></p><p>在project/urls.py中添加路由：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">url(r&#39;^search/&#39;,&nbsp;include(&#39;haystack.urls&#39;)),</pre><p><br/></p><p>在需要使用全文检索的应用目录下创建<span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\">search_indexes.py文件，文件名不可更改：</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\"></span></p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">from&nbsp;haystack&nbsp;import&nbsp;indexes\r\nfrom&nbsp;.models&nbsp;import&nbsp;GoodsInfo\r\n\r\n\r\n#&nbsp;指定对于某个类的某些数据建立索引\r\n#&nbsp;GoodsInfoIndex类名可以修改为xxxxIndex,\r\nclass&nbsp;ArticleIndex(indexes.SearchIndex,&nbsp;indexes.Indexable):\r\n&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;=&nbsp;indexes.CharField(document=True,&nbsp;use_template=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;&nbsp;&nbsp;对title和excerpt字段进行索引\r\n&nbsp;&nbsp;&nbsp;&nbsp;title&nbsp;=&nbsp;indexes.CharField(model_attr=&#39;title&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;excerpt&nbsp;=&nbsp;indexes.CharField(model_attr=&#39;excerpt&#39;)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;get_model(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Article\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;index_queryset(self,&nbsp;using=None):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;self.get_model().objects.all()</pre><p><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; orphans: 3; widows: 3; background-color: rgb(255, 255, 255);\"></span><br/></p><p>在项目中的template目录下创建 search/indexes/appname/article_text.txt:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;目录结构如下：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/media/upimg/image_20190603101802_835.png\" title=\"\" alt=\"image.png\"/></p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;打开txt文件，指定索引的属性：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/media/upimg/image_20190603103026_368.png\" title=\"\" alt=\"image.png\"/></p><p><br/></p><p>找到虚拟环境中的haystack目录：</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">D:\\apps\\python3.7\\Lib\\site-packages\\haystack\r\n\r\n\r\n在haystack目录中创建ChineseAnalyzer.py文件：\r\n\r\nimport&nbsp;jieba\r\nfrom&nbsp;whoosh.analysis&nbsp;import&nbsp;Tokenizer,&nbsp;Token\r\n\r\nclass&nbsp;ChineseTokenizer(Tokenizer):\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__call__(self,&nbsp;value,&nbsp;positions=False,&nbsp;chars=False,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keeporiginal=False,&nbsp;removestops=True,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_pos=0,&nbsp;start_char=0,&nbsp;mode=&#39;&#39;,&nbsp;**kwargs):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;=&nbsp;Token(positions,&nbsp;chars,&nbsp;removestops=removestops,&nbsp;mode=mode,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**kwargs)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seglist&nbsp;=&nbsp;jieba.cut(value,&nbsp;cut_all=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;w&nbsp;in&nbsp;seglist:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.original&nbsp;=&nbsp;t.text&nbsp;=&nbsp;w\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.boost&nbsp;=&nbsp;1.0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;positions:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.pos&nbsp;=&nbsp;start_pos&nbsp;+&nbsp;value.find(w)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;chars:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.startchar&nbsp;=&nbsp;start_char&nbsp;+&nbsp;value.find(w)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.endchar&nbsp;=&nbsp;start_char&nbsp;+&nbsp;value.find(w)&nbsp;+&nbsp;len(w)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;t\r\n\r\ndef&nbsp;ChineseAnalyzer():\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ChineseTokenizer()\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;在haystack目录中找到whoosh_backend.py文件拷贝到当前目录重命名为whoosh_cn_backend.py:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开复制出来的新文件，引入中文分析类，内部采用结巴分词。在文件头部引入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;.ChineseAnalyzer&nbsp;import&nbsp;ChineseAnalyzer\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;更改词语分析类:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查找\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;analyzer=StemmingAnalyzer()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;改为\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;analyzer=ChineseAnalyzer()</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">初始化索引数据：</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">python&nbsp;manage.py&nbsp;rebuild_index</pre><p>后期如果需要更新索引：</p><pre style=\"margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); -webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; letter-spacing: 0.2px;\">python&nbsp;manage.py&nbsp;update_index</pre><p><img src=\"/media/upimg/image_20190603102904_609.png\" title=\"\" alt=\"image.png\"/></p><p><br/></p><p>建立索引成功后的结构如图：</p><p>会在项目中自动生成目录</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/media/upimg/image_20190603103117_263.png\" title=\"\" alt=\"image.png\"/></p><p><br/></p><p><br/></p><p>如果你项目中有搜索页面可以直接跳过点击搜索页面实现的步骤：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;现在需要手写一个搜索框，以及点击搜索后跳转的页面：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义点击搜索页面视图<br/></p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">def&nbsp;query(request):\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&#39;booktest/query.html&#39;</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">在project/urls.py中配置:</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">url(r&#39;^query/&#39;,&nbsp;views.query),</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">在templates/booktest/目录中创建模板query.html.</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">参数q表示搜索内容，传递到模板中的数据为query.</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;全文检索&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;form&nbsp;method=&#39;get&#39;&nbsp;action=&quot;/search/&quot;&nbsp;target=&quot;_blank&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&quot;text&quot;&nbsp;name=&quot;q&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&quot;submit&quot;&nbsp;value=&quot;查询&quot;&gt;\r\n&lt;/form&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><ul style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; margin-bottom: 0.85em; padding: 0px 0px 0px 2em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>自定义搜索结果模板：在templates/search/目录下创建search.html</p><p><br/></p></li></ul><p><br/></p><p>#这里为搜索结果显示，其中的模板变量都是全文检索自己定义好的所以我们直接对结果进行显示就好</p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 0.85em; width: 744.797px; padding: 0px 0px 0px 2em; white-space: normal; -webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px;\"><li><p>搜索结果进行分页，视图向模板中传递的上下文如下</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>query：搜索关键字</p></li><li><p>page：当前页的page对象</p></li><li><p>paginator：分页paginator对象</p></li></ul><li><p>视图接收的参数如下：</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>参数q表示搜索内容，传递到模板中的数据为query</p></li><li><p>参数page表示当前页码</p></li><li><p><br/></p></li></ul></ul><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;全文检索--结果页&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;h1&gt;搜索&amp;nbsp;&lt;b&gt;{{query}}&lt;/b&gt;&amp;nbsp;结果如下：&lt;/h1&gt;\r\n&lt;ul&gt;\r\n{%for&nbsp;item&nbsp;in&nbsp;page%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;{{item.object.id}}--{{item.object.gcontent|safe}}&lt;/li&gt;\r\n{%empty%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;啥也没找到&lt;/li&gt;\r\n{%endfor%}\r\n&lt;/ul&gt;\r\n&lt;hr&gt;\r\n{%for&nbsp;pindex&nbsp;in&nbsp;page.paginator.page_range%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%if&nbsp;pindex&nbsp;==&nbsp;page.number%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{pindex}}&amp;nbsp;&amp;nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%else%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;?q={{query}}&amp;amp;page={{pindex}}&quot;&gt;{{pindex}}&lt;/a&gt;&amp;nbsp;&amp;nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%endif%}\r\n{%endfor%}\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">运行服务器，在浏览器中输入如下地址:</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">http://127.0.0.1:8000/query/</pre><p>最后我们的全文检索就配置好了</p>',2,'2019-06-03 10:37:49.385811','2019-06-04 17:16:44.298668',1,2,1),(11,'Django中间件：禁止ip访问','在每个用户访问的视图中，先判断用户IP地址，如果其IP在我们的禁止列表中，则拒绝为其提供服务. 如果我们想禁止此IP用户访问我们站点中所有的视图，则必须在每一个视图函数中进行如上编码。显然这并不是一个很好的解决方案。原因是我们所做的编码只是针对某个视图进行编码，无法自动作用于所有视图，如何解决问题？django提供了全局范围的编码方案，也即是我们编码可通过django提供的中间件技术作用于全部视图','article_img/2019/06/07/44286920.jpg','<p><br/></p><h4 id=\"121-问题抛出\" style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: 1.25em; orphans: 3; widows: 3; break-after: avoid; margin-top: 1.275em; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">1.问题抛出</h4><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">我们现在想完成禁止某些IP访问我们站点的需求，我们可进行如下编码实现:</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">def&nbsp;index(request):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;禁止ip列表\r\n&nbsp;&nbsp;&nbsp;&nbsp;forbidden_ip&nbsp;=&nbsp;[&#39;192.168.0.65&#39;,&nbsp;]\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;获得用户ip\r\n&nbsp;&nbsp;&nbsp;&nbsp;remote_ip&nbsp;=&nbsp;request.META.get(&#39;REMOTE_ADDR&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(&#39;remote_ip&#39;,&nbsp;remote_ip)\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;判断用户ip\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;remote_ip&nbsp;in&nbsp;forbidden_ip:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;Forbidden!&#39;)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;index.html&#39;)</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">在每个用户访问的视图中，先判断用户IP地址，如果其IP在我们的禁止列表中，则拒绝为其提供服务. 如果我们想禁止此IP用户访问我们站点中所有的视图，则必须在每一个视图函数中进行如上编码。显然这并不是一个很好的解决方案。原因是我们所做的编码只是针对某个视图进行编码，无法自动作用于所有视图，如何解决问题？django提供了全局范围的编码方案，也即是我们编码可通过django提供的中间件技术作用于全部视图。那么如何解决此问题呢？</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">在应用中创建middleware.py模块,编写如下代码:</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">from&nbsp;django.http&nbsp;import&nbsp;HttpResponse\r\n\r\nclass&nbsp;IpsForbidden(object):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process_request(self,&nbsp;request):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;禁止ip列表\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forbidden_ip&nbsp;=&nbsp;[&#39;192.168.0.65&#39;,&nbsp;]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;获得用户ip\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remote_ip&nbsp;=&nbsp;request.META.get(&#39;REMOTE_ADDR&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&#39;remote_ip&#39;,&nbsp;remote_ip)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;判断用户ip\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;remote_ip&nbsp;in&nbsp;forbidden_ip:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;&lt;h1&gt;Forbidden!&lt;/h1&gt;&#39;)</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">那么我们即可禁止该IP访问我们站点中所有页面.</p><h4 id=\"122-自定义中间件\" style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: 1.25em; orphans: 3; widows: 3; break-after: avoid; margin-top: 1.275em; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">2. 自定义中间件</h4><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">Django中的中间件是一个轻量级、底层的插件系统，可以介入Django的请求和响应处理过程，修改Django的输入或输出.</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">Django在中间件中预置了六个方法，这六个方法的区别在于不同的阶段执行，对输入或输出进行干预，方法如下:</p><table width=\"770\"><thead style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit;\"><tr style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; break-inside: avoid; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\" class=\"firstRow\"><th style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px; border-top-color: rgb(221, 221, 221);\">方法</th><th style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px; border-top-color: rgb(221, 221, 221);\">描述</th></tr></thead><tbody style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit;\"><tr style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; break-inside: avoid; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">process_request(request)</td><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">处理请求前：在每个请求上调用，返回None或HttpResponse对象</td></tr><tr style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; break-inside: avoid; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">process_view(request, view_func, view_args, view_kwargs)</td><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">处理视图前：在每个请求上调用，返回None或HttpResponse对象.</td></tr><tr style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; break-inside: avoid; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">__init__(get_response):</td><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">初始化：无需任何参数，服务器响应第一个请求的时候调用，用于确定是否启用当前中间件.</td></tr><tr style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; break-inside: avoid; background-color: rgb(248, 248, 248); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">process_response(request, response)</td><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">处理响应后：所有响应返回浏览器之前被调用，在每个请求上调用，返回HttpResponse对象.</td></tr><tr style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; break-inside: avoid; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(204, 204, 204);\"><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">process_exception(request,exception)</td><td style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: inherit; padding: 6px 13px;\">异常处理：当视图抛出异常时调用，在每个请求上调用，返回一个HttpResponse对象.</td></tr></tbody></table><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\"><br/></p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">我们从浏览器发出请求 Request，返回响应后的内容 HttpResponse. 在请求阶段中，调用视图之前，Django会按照MIDDLEWARE_CLASSES中定义的顺序自顶向下应用中间件。</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">Django接收到的第一个请求, 会调用中间件的<span style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-weight: 700; font-size: inherit;\">init</span>方法，完成中间件初始化.</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">在请求阶段中，调用视图之前，Django会按照MIDDLEWARE_CLASSES中定义的顺序自顶向下应用中间件。会调用中间件的两个函数：</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">process_request()\r\nprocess_view()</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">在响应阶段中，调用视图之后，中间件会按照相反的顺序应用，自底向上。会用中间件函数：</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">process_exception()（仅当视图抛出异常的时候）\r\nprocess_response()</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">Django的程序中，中间件不是必需的. 只要你喜欢，MIDDLEWARE_CLASSES可以为空 但是强烈推荐你至少使用CommonMiddleware。</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">MIDDLEWARE_CLASSES中的顺序非常重要，因为一个中间件可能依赖于另外一个。例如，AuthenticationMiddleware在会话中储存已认证的用户。所以它必须在SessionMiddleware之后运行。</p><h4 id=\"自定义中间件\" style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: 1.25em; orphans: 3; widows: 3; break-after: avoid; margin-top: 1.275em; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">自定义中间件</h4><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">编写自己的中间件很容易的。每个中间件组件是一个独立的Python 类，我们可以定义表中所示中间件的函数中的的一个或者多个.</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">我们在app目录下创建middleware.py文件, 在该文件中创建中间件:</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; margin-bottom: 1.275em; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px;\">class&nbsp;CustomMiddleware(object):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process_request(self,&nbsp;request):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;CustomMiddleware&nbsp;process_request&nbsp;被调用!&quot;)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process_view(self,&nbsp;request,&nbsp;view_func,&nbsp;view_args,&nbsp;view_kwargs):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;CustomMiddleware&nbsp;process_view&nbsp;&nbsp;被调用!&quot;)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process_response(self,&nbsp;request,&nbsp;response):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;CustomMiddleware&nbsp;process_response&nbsp;被调用!&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;response</pre><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">中间件方法调用流程:&nbsp;</p><p><img src=\"/media/upimg/image_20190607110338_466.png\" title=\"\" alt=\"image.png\"/></p><p><br/></p><h4 id=\"123-中间件异常方法\" style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-size: 1.25em; orphans: 3; widows: 3; break-after: avoid; margin-top: 1.275em; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">3. 中间件异常方法</h4><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">当我们的视图页面发生程序错误，默认会在客户端显示500错误，有时我们需要将错误信息写入到日志，那么可在该方法中进行错误处理编码。</p><p style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; orphans: 3; widows: 3; margin-top: 0px; margin-bottom: 0.85em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; letter-spacing: 0.2px; white-space: normal;\">函数如果返回response则使用返回的响应，而不再使用django框架提供的异常机制。如果返回None，则使用djangp默认的异常处理机制来处理错误.</p><pre style=\"-webkit-font-smoothing: antialiased; box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; white-space: pre-wrap; break-inside: avoid; direction: ltr; border: none; color: rgb(51, 51, 51); overflow: auto; overflow-wrap: normal; margin-top: 0px; padding: 0.85em 1em; background-color: rgb(247, 247, 247); letter-spacing: 0.2px; margin-bottom: 0px !important;\">from&nbsp;django.http&nbsp;import&nbsp;HttpResponse\r\n\r\nclass&nbsp;ErrorViewMiddleware(object):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process_exception(self,&nbsp;request,&nbsp;exception):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;&lt;h1&gt;很抱歉您访问的页面无法显示!&lt;/h1&gt;&#39;)</pre><p><br/></p>',0,'2019-06-07 11:04:24.514519','2019-06-07 11:04:24.514546',1,2,1);
/*!40000 ALTER TABLE `blog_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article_tags`
--

DROP TABLE IF EXISTS `blog_article_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_article_tags_article_id_tag_id_b78a22e9_uniq` (`article_id`,`tag_id`),
  KEY `blog_article_tags_tag_id_88eb3ed9_fk_blog_tag_id` (`tag_id`),
  CONSTRAINT `blog_article_tags_article_id_82c02dd6_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `blog_article_tags_tag_id_88eb3ed9_fk_blog_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article_tags`
--

LOCK TABLES `blog_article_tags` WRITE;
/*!40000 ALTER TABLE `blog_article_tags` DISABLE KEYS */;
INSERT INTO `blog_article_tags` VALUES (2,1,1),(3,2,1),(1,3,4),(4,4,4),(5,5,2),(6,6,3),(7,6,4),(8,7,6),(9,8,6),(10,9,1),(11,10,1),(12,11,1);
/*!40000 ALTER TABLE `blog_article_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_banner`
--

DROP TABLE IF EXISTS `blog_banner`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_banner` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text_info` varchar(50) NOT NULL,
  `img` varchar(100) NOT NULL,
  `link_url` varchar(100) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_banner`
--

LOCK TABLES `blog_banner` WRITE;
/*!40000 ALTER TABLE `blog_banner` DISABLE KEYS */;
INSERT INTO `blog_banner` VALUES (1,'Django Rest Framework -云片网发送短信验证码','banner/_LSR0U7J4IGIR68RHJ3W.png','http://120.79.81.154/show-1.html',1),(2,'Django常用命令介绍，新手建议阅读','banner/Django阿里云轻量应用服务器Ubuntu16.04uWSGINgin.jpg','http://120.79.81.154/show-2.html',1);
/*!40000 ALTER TABLE `blog_banner` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `index` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (1,'Django',999),(2,'Python',999),(3,'最新资讯',999);
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_comment`
--

DROP TABLE IF EXISTS `blog_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `email` varchar(254) NOT NULL,
  `content` longtext NOT NULL,
  `publish` date NOT NULL,
  `article_id` int(11) NOT NULL,
  `reply_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_comment_article_id_3d58bca6_fk_blog_article_id` (`article_id`),
  KEY `blog_comment_reply_id_2b6e250c_fk_blog_comment_id` (`reply_id`),
  CONSTRAINT `blog_comment_article_id_3d58bca6_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `blog_comment_reply_id_2b6e250c_fk_blog_comment_id` FOREIGN KEY (`reply_id`) REFERENCES `blog_comment` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_comment`
--

LOCK TABLES `blog_comment` WRITE;
/*!40000 ALTER TABLE `blog_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_link`
--

DROP TABLE IF EXISTS `blog_link`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_link` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `linkurl` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_link`
--

LOCK TABLES `blog_link` WRITE;
/*!40000 ALTER TABLE `blog_link` DISABLE KEYS */;
INSERT INTO `blog_link` VALUES (1,'新码农','http://newcoder.top');
/*!40000 ALTER TABLE `blog_link` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tag`
--

DROP TABLE IF EXISTS `blog_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tag`
--

LOCK TABLES `blog_tag` WRITE;
/*!40000 ALTER TABLE `blog_tag` DISABLE KEYS */;
INSERT INTO `blog_tag` VALUES (1,'django'),(2,'部署'),(3,'python'),(4,'互联网'),(5,'Flask'),(6,'SQL');
/*!40000 ALTER TABLE `blog_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tui`
--

DROP TABLE IF EXISTS `blog_tui`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tui` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tui`
--

LOCK TABLES `blog_tui` WRITE;
/*!40000 ALTER TABLE `blog_tui` DISABLE KEYS */;
INSERT INTO `blog_tui` VALUES (1,'热门推荐'),(2,'推荐阅读');
/*!40000 ALTER TABLE `blog_tui` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `captcha_captchastore`
--

DROP TABLE IF EXISTS `captcha_captchastore`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `captcha_captchastore` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `challenge` varchar(32) NOT NULL,
  `response` varchar(32) NOT NULL,
  `hashkey` varchar(40) NOT NULL,
  `expiration` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `hashkey` (`hashkey`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `captcha_captchastore`
--

LOCK TABLES `captcha_captchastore` WRITE;
/*!40000 ALTER TABLE `captcha_captchastore` DISABLE KEYS */;
INSERT INTO `captcha_captchastore` VALUES (62,'TFHQ','tfhq','78eeb448cf51cb684af9d97f55213279b6354b3e','2019-06-03 12:01:09.404533'),(63,'YNRX','ynrx','be0c4d1753b3d9b7c186c107c67f06bf5a740ba4','2019-06-03 12:01:33.861237'),(64,'INGU','ingu','9eb2f4e82cf5c80c2f394290e0c062ef4e271386','2019-06-05 11:54:49.468263'),(65,'MQVN','mqvn','23084cdc0b8830ceb74c24973f9ef3698330c18c','2019-06-05 11:55:06.743307');
/*!40000 ALTER TABLE `captcha_captchastore` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2019-05-16 19:24:04.702419','1','Django',1,'[{\"added\": {}}]',9,1),(2,'2019-05-16 19:24:32.099074','2','Python',1,'[{\"added\": {}}]',9,1),(3,'2019-05-16 19:44:11.042858','1','Django Rest Framework -云片网发送短信验证码',1,'[{\"added\": {}}]',8,1),(4,'2019-05-16 20:21:21.676099','1','热门推荐',1,'[{\"added\": {}}]',13,1),(5,'2019-05-16 20:21:57.353072','2','推荐阅读',1,'[{\"added\": {}}]',13,1),(6,'2019-05-16 20:23:34.554162','1','django',1,'[{\"added\": {}}]',12,1),(7,'2019-05-16 20:23:42.248299','2','部署',1,'[{\"added\": {}}]',12,1),(8,'2019-05-16 20:23:54.421526','3','python',1,'[{\"added\": {}}]',12,1),(9,'2019-05-16 20:28:22.169723','1','Django Rest Framework 云片网发送短信验证码',1,'[{\"added\": {}}]',7,1),(10,'2019-05-16 20:33:43.554055','2','Django常用命令介绍，新手建议阅读',1,'[{\"added\": {}}]',7,1),(11,'2019-05-16 20:40:28.002389','3','最新资讯',1,'[{\"added\": {}}]',9,1),(12,'2019-05-16 20:42:08.307688','4','互联网',1,'[{\"added\": {}}]',12,1),(13,'2019-05-16 20:44:14.615839','3','谷歌失败案例：那些年在微服务上踩的坑',1,'[{\"added\": {}}]',7,1),(14,'2019-05-22 10:01:39.946817','1','Django Rest Framework -云片网发送短信验证码',2,'[{\"changed\": {\"fields\": [\"link_url\"]}}]',8,1),(15,'2019-05-22 10:03:14.554131','2','Django常用命令介绍，新手建议阅读',1,'[{\"added\": {}}]',8,1),(16,'2019-05-27 21:31:27.990842','5','Flask',1,'[{\"added\": {}}]',12,1),(17,'2019-05-27 21:44:36.404697','4','自研系统，能解决华为当下的困境吗？',1,'[{\"added\": {}}]',7,1),(18,'2019-05-28 21:16:53.649646','4','自研系统，能解决华为当下的困境吗？',2,'[{\"changed\": {\"fields\": [\"tags\", \"img\"]}}]',7,1),(19,'2019-05-28 21:23:38.283315','4','自研系统，能解决华为当下的困境吗？',2,'[{\"changed\": {\"fields\": [\"img\"]}}]',7,1),(20,'2019-05-28 21:58:42.829250','5','推荐新手入门nginx和uwsgi详解',1,'[{\"added\": {}}]',7,1),(21,'2019-05-28 22:01:06.869040','6','纽约蹭饭手册：怎样利用Python在纽约吃霸王餐？',1,'[{\"added\": {}}]',7,1),(22,'2019-05-28 22:01:51.430129','5','推荐新手入门nginx和uwsgi详解',2,'[{\"changed\": {\"fields\": [\"img\"]}}]',7,1),(23,'2019-05-28 22:03:53.391206','3','谷歌失败案例：那些年在微服务上踩的坑',2,'[]',7,1),(24,'2019-05-29 09:28:29.470783','6','纽约蹭饭手册：怎样利用Python在纽约吃霸王餐？',2,'[]',7,1),(25,'2019-05-29 10:43:37.047253','4','自研系统，能解决华为当下的困境吗？',2,'[]',7,1),(26,'2019-05-29 16:17:35.125592','6','SQL',1,'[{\"added\": {}}]',12,1),(27,'2019-05-29 16:32:40.988600','7','SQL行转列经典例子',1,'[{\"added\": {}}]',7,1),(28,'2019-05-29 20:12:08.523056','8','MySQL命令大全',1,'[{\"added\": {}}]',7,1),(29,'2019-05-31 20:42:22.755951','9','Django自带admin不够美观试试xadmin',1,'[{\"added\": {}}]',7,1),(30,'2019-05-31 20:47:09.562575','9','Django自带admin不够美观试试xadmin',2,'[{\"changed\": {\"fields\": [\"img\", \"body\"]}}]',7,1),(31,'2019-06-03 10:37:49.391123','10','django2.1全文检索haystack+whoosh+jieba',1,'[{\"added\": {}}]',7,1),(32,'2019-06-03 17:30:21.297164','1','新码农',1,'[{\"added\": {}}]',11,1),(33,'2019-06-04 20:59:44.668922','9','Django自带admin不够美观试试xadmin',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1),(34,'2019-06-04 21:06:51.825864','9','Django自带admin不够美观试试xadmin',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1),(35,'2019-06-04 21:10:26.114890','9','Django自带admin不够美观试试xadmin',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1),(36,'2019-06-04 21:12:34.655368','9','Django自带admin不够美观试试xadmin',2,'[{\"changed\": {\"fields\": [\"body\"]}}]',7,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(7,'blog','article'),(8,'blog','banner'),(9,'blog','category'),(10,'blog','comment'),(11,'blog','link'),(12,'blog','tag'),(13,'blog','tui'),(15,'captcha','captchastore'),(5,'contenttypes','contenttype'),(14,'login','user'),(6,'sessions','session'),(17,'xadmin','bookmark'),(19,'xadmin','log'),(18,'xadmin','usersettings'),(16,'xadmin','userwidget');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2019-05-16 19:16:33.037158'),(2,'auth','0001_initial','2019-05-16 19:17:01.632063'),(3,'contenttypes','0002_remove_content_type_name','2019-05-16 19:17:07.711614'),(4,'admin','0001_initial','2019-05-16 19:17:12.491872'),(5,'admin','0002_logentry_user','2019-05-16 19:17:16.628549'),(6,'auth','0002_alter_permission_name_max_length','2019-05-16 19:17:20.803339'),(7,'auth','0003_alter_user_email_max_length','2019-05-16 19:17:23.471490'),(8,'auth','0004_alter_user_username_opts','2019-05-16 19:17:23.623256'),(9,'auth','0005_alter_user_last_login_null','2019-05-16 19:17:25.667530'),(10,'auth','0006_require_contenttypes_0002','2019-05-16 19:17:25.761394'),(11,'auth','0007_alter_validators_add_error_messages','2019-05-16 19:17:25.963078'),(12,'auth','0008_alter_user_username_max_length','2019-05-16 19:17:29.665217'),(13,'auth','0009_alter_user_last_name_max_length','2019-05-16 19:17:35.615699'),(14,'blog','0001_initial','2019-05-16 19:18:12.197967'),(15,'captcha','0001_initial','2019-05-16 19:18:14.099710'),(16,'login','0001_initial','2019-05-16 19:18:15.103702'),(17,'sessions','0001_initial','2019-05-16 19:18:17.062531'),(18,'admin','0002_logentry_remove_auto_add','2019-06-05 09:18:47.176625'),(19,'admin','0003_logentry_add_action_flag_choices','2019-06-05 09:18:47.196466'),(20,'xadmin','0001_initial','2019-06-05 09:18:47.429787'),(21,'xadmin','0002_log','2019-06-05 09:18:47.536778'),(22,'xadmin','0003_auto_20160715_0100','2019-06-05 09:18:47.589768');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('00xxxdktgm8i76nn3h9mlhftddex8njf','MDgxZDFkMWE3YmZmNjEzOGRlYWIxY2FjNmNmYTNiZGMwZWQ0MmFmMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiZmJiZWJhMDQ2ZTQxMDBjMzhmNGUwMDAxYmY3OTQ3ZTBmMmFkZDQ3In0=','2019-05-30 20:19:10.542008'),('2qaqxhfkitr3fm8usvjjgrm4ylnvhqmg','MDgxZDFkMWE3YmZmNjEzOGRlYWIxY2FjNmNmYTNiZGMwZWQ0MmFmMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiZmJiZWJhMDQ2ZTQxMDBjMzhmNGUwMDAxYmY3OTQ3ZTBmMmFkZDQ3In0=','2019-05-30 19:23:16.771195'),('ddxpbudioqlzm92jq8j7h6vzsm0prk6n','YzUxZmJkMmViZjg1MTkwODE1NmFmNDYzMjMyODA5NzBmODcwMjNhNjp7Il9hdXRoX3VzZXJfaGFzaCI6ImJmYmJlYmEwNDZlNDEwMGMzOGY0ZTAwMDFiZjc5NDdlMGYyYWRkNDciLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2019-06-12 09:27:56.977792'),('gr8nern5zdvfnssl865i9cct6q4a3akx','ODgzZjhiYjY5YjRlNzJkODdlNjk5YzYyOTRkMTNjZGMyMzk2YjkyZTp7ImlzX2xvZ2luIjp0cnVlLCJ1c2VyX25hbWUiOiJcdTY3OTdcdTVkZGVcdTVlMDJcdTY3MDBcdTU0MGVcdTc2ODRcdTUzNTVcdTdlYWYiLCJ1c2VyX2lkIjoxfQ==','2019-05-30 21:29:51.230611'),('hjnxxaqlzkrqt1g365640p6y9vmki73a','YWI3ZTQ0MjExZTdhNGVlYWY0Yzk4NzEyZTI0ZWRjYzEyZmRhOTlkOTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiYmZiYmViYTA0NmU0MTAwYzM4ZjRlMDAwMWJmNzk0N2UwZjJhZGQ0NyIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2019-06-05 10:00:09.593293'),('mmjhaptnczq41mccltrtvqdke03gdsnk','NzNlNzk2MjM2MjJiMmUyYWQ0YTk2MGQzYmYyNjQ0ZWExM2Q5NDljMzp7Il9hdXRoX3VzZXJfaGFzaCI6ImJmYmJlYmEwNDZlNDEwMGMzOGY0ZTAwMDFiZjc5NDdlMGYyYWRkNDciLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIm5hdl9tZW51IjoiW3tcInRpdGxlXCI6IFwiQmxvZ1wiLCBcIm1lbnVzXCI6IFt7XCJvcmRlclwiOiA1LCBcInRpdGxlXCI6IFwiXHU2NTg3XHU3YWUwXHU1MjE3XHU4ODY4XCIsIFwidXJsXCI6IFwiL2FkbWluL2Jsb2cvYXJ0aWNsZS9cIiwgXCJpY29uXCI6IG51bGx9LCB7XCJvcmRlclwiOiA2LCBcInRpdGxlXCI6IFwiXHU4ZjZlXHU2NGFkXHU1NmZlXCIsIFwidXJsXCI6IFwiL2FkbWluL2Jsb2cvYmFubmVyL1wiLCBcImljb25cIjogbnVsbH0sIHtcIm9yZGVyXCI6IDcsIFwidGl0bGVcIjogXCJcdTY1ODdcdTdhZTBcdTUyMDZcdTdjN2JcIiwgXCJ1cmxcIjogXCIvYWRtaW4vYmxvZy9jYXRlZ29yeS9cIiwgXCJpY29uXCI6IG51bGx9LCB7XCJvcmRlclwiOiA4LCBcInRpdGxlXCI6IFwiXHU2NTg3XHU3YWUwXHU2ODA3XHU3YjdlXCIsIFwidXJsXCI6IFwiL2FkbWluL2Jsb2cvdGFnL1wiLCBcImljb25cIjogbnVsbH0sIHtcIm9yZGVyXCI6IDksIFwidGl0bGVcIjogXCJcdTYzYThcdTgzNTBcdTRmNGRcIiwgXCJ1cmxcIjogXCIvYWRtaW4vYmxvZy90dWkvXCIsIFwiaWNvblwiOiBudWxsfSwge1wib3JkZXJcIjogMTAsIFwidGl0bGVcIjogXCJcdTUzY2JcdTYwYzVcdTk0ZmVcdTYzYTVcIiwgXCJ1cmxcIjogXCIvYWRtaW4vYmxvZy9saW5rL1wiLCBcImljb25cIjogbnVsbH1dLCBcImZpcnN0X3VybFwiOiBcIi9hZG1pbi9ibG9nL2FydGljbGUvXCJ9LCB7XCJmaXJzdF9pY29uXCI6IFwiZmEgZmEtY29nXCIsIFwidGl0bGVcIjogXCJcdTdiYTFcdTc0MDZcIiwgXCJtZW51c1wiOiBbe1wib3JkZXJcIjogMTIsIFwidGl0bGVcIjogXCJcdTY1ZTVcdTVmZDdcdThiYjBcdTVmNTVcIiwgXCJ1cmxcIjogXCIvYWRtaW4veGFkbWluL2xvZy9cIiwgXCJpY29uXCI6IFwiZmEgZmEtY29nXCJ9XSwgXCJmaXJzdF91cmxcIjogXCIvYWRtaW4veGFkbWluL2xvZy9cIn0sIHtcImZpcnN0X2ljb25cIjogXCJmYSBmYS1sb2NrXCIsIFwidGl0bGVcIjogXCJcdThiYTRcdThiYzFcdTU0OGNcdTYzODhcdTY3NDNcIiwgXCJtZW51c1wiOiBbe1wib3JkZXJcIjogMiwgXCJ0aXRsZVwiOiBcIlx1N2VjNFwiLCBcInVybFwiOiBcIi9hZG1pbi9hdXRoL2dyb3VwL1wiLCBcImljb25cIjogXCJmYSBmYS1ncm91cFwifSwge1wib3JkZXJcIjogMywgXCJ0aXRsZVwiOiBcIlx1NzUyOFx1NjIzN1wiLCBcInVybFwiOiBcIi9hZG1pbi9hdXRoL3VzZXIvXCIsIFwiaWNvblwiOiBcImZhIGZhLXVzZXJcIn0sIHtcIm9yZGVyXCI6IDQsIFwidGl0bGVcIjogXCJcdTY3NDNcdTk2NTBcIiwgXCJ1cmxcIjogXCIvYWRtaW4vYXV0aC9wZXJtaXNzaW9uL1wiLCBcImljb25cIjogXCJmYSBmYS1sb2NrXCJ9XSwgXCJmaXJzdF91cmxcIjogXCIvYWRtaW4vYXV0aC9wZXJtaXNzaW9uL1wifV0iLCJfYXV0aF91c2VyX2lkIjoiMSIsIkxJU1RfUVVFUlkiOltbImJsb2ciLCJhcnRpY2xlIl0sIiJdfQ==','2019-06-21 11:04:25.718418'),('rh4d5vi7nl3rb9lq518sqwj354xvdw2t','MDgxZDFkMWE3YmZmNjEzOGRlYWIxY2FjNmNmYTNiZGMwZWQ0MmFmMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiZmJiZWJhMDQ2ZTQxMDBjMzhmNGUwMDAxYmY3OTQ3ZTBmMmFkZDQ3In0=','2019-05-31 18:23:18.594092');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `login_user`
--

DROP TABLE IF EXISTS `login_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `login_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL,
  `password` varchar(256) NOT NULL,
  `nickname` varchar(20) NOT NULL,
  `email` varchar(254) NOT NULL,
  `gender` tinyint(1) NOT NULL,
  `photo` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `login_user`
--

LOCK TABLES `login_user` WRITE;
/*!40000 ALTER TABLE `login_user` DISABLE KEYS */;
INSERT INTO `login_user` VALUES (1,'youke1','15e2b0d3c33891ebb0f1ef609ec419420c20e320ce94c65fbc8c3312448eb225','林州市最后的单纯','1457753144@qq.com',1,'photo/YOV04QJN2Z0DO_KSBZ1NB1A.bmp');
/*!40000 ALTER TABLE `login_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `xadmin_bookmark`
--

DROP TABLE IF EXISTS `xadmin_bookmark`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `xadmin_bookmark` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(128) NOT NULL,
  `url_name` varchar(64) NOT NULL,
  `query` varchar(1000) NOT NULL,
  `is_share` tinyint(1) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_bookmark_content_type_id_60941679_fk_django_co` (`content_type_id`),
  KEY `xadmin_bookmark_user_id_42d307fc_fk_auth_user_id` (`user_id`),
  CONSTRAINT `xadmin_bookmark_content_type_id_60941679_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `xadmin_bookmark_user_id_42d307fc_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `xadmin_bookmark`
--

LOCK TABLES `xadmin_bookmark` WRITE;
/*!40000 ALTER TABLE `xadmin_bookmark` DISABLE KEYS */;
/*!40000 ALTER TABLE `xadmin_bookmark` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `xadmin_log`
--

DROP TABLE IF EXISTS `xadmin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `xadmin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `ip_addr` char(39) DEFAULT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` varchar(32) NOT NULL,
  `message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_log_content_type_id_2a6cb852_fk_django_content_type_id` (`content_type_id`),
  KEY `xadmin_log_user_id_bb16a176_fk_auth_user_id` (`user_id`),
  CONSTRAINT `xadmin_log_content_type_id_2a6cb852_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `xadmin_log_user_id_bb16a176_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `xadmin_log`
--

LOCK TABLES `xadmin_log` WRITE;
/*!40000 ALTER TABLE `xadmin_log` DISABLE KEYS */;
INSERT INTO `xadmin_log` VALUES (1,'2019-06-07 11:04:25.574897','114.249.221.39','11','Django中间件：禁止ip访问','create','已添加。',7,1);
/*!40000 ALTER TABLE `xadmin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `xadmin_usersettings`
--

DROP TABLE IF EXISTS `xadmin_usersettings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `xadmin_usersettings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `key` varchar(256) NOT NULL,
  `value` longtext NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_usersettings_user_id_edeabe4a_fk_auth_user_id` (`user_id`),
  CONSTRAINT `xadmin_usersettings_user_id_edeabe4a_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `xadmin_usersettings`
--

LOCK TABLES `xadmin_usersettings` WRITE;
/*!40000 ALTER TABLE `xadmin_usersettings` DISABLE KEYS */;
INSERT INTO `xadmin_usersettings` VALUES (1,'dashboard:home:pos','',1);
/*!40000 ALTER TABLE `xadmin_usersettings` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `xadmin_userwidget`
--

DROP TABLE IF EXISTS `xadmin_userwidget`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `xadmin_userwidget` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `page_id` varchar(256) NOT NULL,
  `widget_type` varchar(50) NOT NULL,
  `value` longtext NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_userwidget_user_id_c159233a_fk_auth_user_id` (`user_id`),
  CONSTRAINT `xadmin_userwidget_user_id_c159233a_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `xadmin_userwidget`
--

LOCK TABLES `xadmin_userwidget` WRITE;
/*!40000 ALTER TABLE `xadmin_userwidget` DISABLE KEYS */;
/*!40000 ALTER TABLE `xadmin_userwidget` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-06-09 15:09:39
